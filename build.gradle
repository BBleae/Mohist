buildscript {
    repositories {
        maven {
            name 'aliyun'
            url 'https://maven.aliyun.com/repository/public'
        }
        mavenLocal()
        mavenCentral()
        maven {
            name 'lliiooll'
            url 'https://maven.lliiooll.cn/'
        }
        maven {
            name 'prok'
            url 'https://repo.prok.pw/'
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name 'spigot'
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "idea"
apply plugin: 'net.minecraftforge.gradle.patcher'
apply plugin: 'net.minecraftforge.gradle.launch4j'

group = 'cn.pfcraft'
version = '0.0.1'

repositories {
    clear()
    maven {
        name 'aliyun'
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        name 'lliiooll'
        url 'https://maven.lliiooll.cn/'
    }
    maven {
        name = "forge"
        url = "https://files.minecraftforge.net/maven"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name 'minecraft'
        url 'https://libraries.minecraft.net/'
    }
    maven {
        name 'spigot'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name 'papermc'
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name 'maven'
        url 'https://mvnrepository.com/artifact/'
    }
    maven {
        name 'prok'
        url 'https://repo.prok.pw/'
    }
    mavenCentral()
}

configurations{
    compile.extendsFrom exported
    libraries
}

dependencies {
    libraries 'org.avaje:ebean:2.8.1'
    libraries 'org.bukkit:mohist-bukkit:1.12.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar{
    into('lib') {
        from configurations.libraries
    }
    exclude "**/configurations/**"
    exclude "**/META-INF/**"
    exclude "log4j2.xml"
}

minecraft {
    version = "1.12.2"
    mappings = 'snapshot_nodoc_20171003'
    workspaceDir = "projects"
    versionJson = "jsons/1.12.2-dev.json"
    buildUserdev = true
    buildInstaller = true
    installerVersion = '1.5'

    def common = {
        patchPrefixOriginal "../src-base/minecraft"
        patchPrefixChanged "../src-work/minecraft"
        mainClassServer "net.minecraft.launchwrapper.Launch"
        tweakClassServer "net.minecraftforge.fml.common.launcher.FMLServerTweaker"
    }

    projects {
        forge {
            rootDir "forge/"
            patchDir "forge/patches/minecraft/"
            patchAfter "clean"
            genPatchesFrom "clean"
            genMcpPatches = false
            applyMcpPatches = false
            s2sKeepImports = true
            with common
        }

        mohsit {
            rootDir "."
            patchDir "patches/"
            patchAfter "forge"
            genPatchesFrom "forge"
            genMcpPatches = true
            applyMcpPatches = true
            s2sKeepImports = true
            with common
        }
    }
}

installer {
    classifier = 'installer'
    from "forge/src/main/resources/forge_logo.png"
    rename "forge_logo\\.png", "big_logo.png"
}

launch4j {
    jar = installer.archivePath.canonicalPath
    outfile = file("build/distributions/${project.name}-${project.version}-installer-win.exe").canonicalPath
    icon = file('icon.ico').canonicalPath
    manifest = file('l4jManifest.xml').canonicalPath
    jreMinVersion = '1.8.0'
    initialHeapPercent = 5;
    maxHeapPercent = 100;
}

tasks.generateXmlConfig.dependsOn installer
tasks.build.dependsOn 'launch4j'
tasks.compileJava.enabled = false
tasks.reobfuscate.setProperty("extraSrg",["PK: org/bukkit/craftbukkit org/bukkit/craftbukkit/v1_12_R1"])

task signUniversal(type: SignJar, dependsOn: 'outputJar') {
    onlyIf {
        project.hasProperty('jarsigner')
    }

    def jarsigner = [:]

    if (project.hasProperty('jarsigner'))
        jarsigner = project.jarsigner

    alias = 'forge'
    exclude "paulscode/**"
    storePass = jarsigner.storepass
    keyPass = jarsigner.keypass
    keyStore = jarsigner.keystore
    inputFile = outputJar.archivePath
    outputFile = outputJar.archivePath
}
build.dependsOn signUniversal
installer.dependsOn signUniversal

outputJar {
    classifier = 'universal'

    manifest.attributes([
            "Implementation-Title": "Mohist",
            "Implementation-Version": version,
            "Main-Class": "net.minecraftforge.fml.relauncher.ServerLaunchWrapper",
            "TweakClass": "net.minecraftforge.fml.common.launcher.FMLTweaker",
            "Class-Path": getServerClasspath(file("jsons/1.12.2-rel.json"))
    ])
}

processJson {
    releaseJson = "jsons/1.12.2-rel.json"
    addReplacements([
            "@minecraft_version@": project.minecraft.version,
            "@version@": project.version,
            "@project@": "mohist",
            "@artifact@": "cn:pfcraft:${project.version}",
            "@universal_jar@": { outputJar.archiveName },
            "@timestamp@": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
    ])
}

extractForgeSources {
    exclude "**/SideOnly.java", "**/Side.java"
}

genGradleProjects {
    addCompileDep "junit:junit:4.12"
}

import groovy.json.JsonSlurper

String getServerClasspath(File file) {
    def node = new JsonSlurper().parse(file)
    def out = new StringBuilder()
    node.versionInfo.libraries.each { lib ->
        if (lib.serverreq)
        {
            def split = lib.name.split(':')
            def group = split[0].replace('.', '/')
            def artifact = split[1]
            def version = split[2]
            out += "libraries/$group/$artifact/$version/$artifact-${version}.jar "
        }
    }
    out += "minecraft_server.1.12.2.jar"
    return out.toString()
}