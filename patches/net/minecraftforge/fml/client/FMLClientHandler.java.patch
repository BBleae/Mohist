--- ../src-base/minecraft/net/minecraftforge/fml/client/FMLClientHandler.java
+++ ../src-work/minecraft/net/minecraftforge/fml/client/FMLClientHandler.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -16,47 +16,29 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
-
 package net.minecraftforge.fml.client;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Set;
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-import java.util.function.Predicate;
-
+import cn.pfcraft.server.Mohist;
+import com.google.common.base.CharMatcher;
+import com.google.common.base.MoreObjects;
+import com.google.common.base.Strings;
+import com.google.common.base.Throwables;
+import com.google.common.collect.*;
+import com.google.common.collect.ImmutableMap.Builder;
+import com.google.common.util.concurrent.ListenableFuture;
+import com.google.gson.JsonArray;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.EntityPlayerSP;
-import net.minecraft.client.gui.Gui;
-import net.minecraft.client.gui.GuiIngameMenu;
-import net.minecraft.client.gui.GuiMainMenu;
-import net.minecraft.client.gui.GuiScreen;
-import net.minecraft.client.gui.GuiWorldSelection;
-import net.minecraft.client.gui.ScaledResolution;
-import net.minecraft.client.gui.ServerListEntryNormal;
+import net.minecraft.client.gui.*;
 import net.minecraft.client.multiplayer.GuiConnecting;
 import net.minecraft.client.multiplayer.ServerData;
 import net.minecraft.client.multiplayer.WorldClient;
 import net.minecraft.client.network.NetHandlerPlayClient;
 import net.minecraft.client.network.ServerPinger;
 import net.minecraft.client.renderer.GlStateManager;
-import net.minecraft.client.resources.AbstractResourcePack;
-import net.minecraft.client.resources.FallbackResourceManager;
-import net.minecraft.client.resources.IReloadableResourceManager;
-import net.minecraft.client.resources.IResource;
-import net.minecraft.client.resources.IResourcePack;
-import net.minecraft.client.resources.LegacyV2Adapter;
-import net.minecraft.client.resources.SimpleReloadableResourceManager;
+import net.minecraft.client.resources.*;
 import net.minecraft.client.resources.data.MetadataSerializer;
 import net.minecraft.client.resources.data.PackMetadataSection;
 import net.minecraft.client.util.RecipeBookClient;
@@ -81,8 +63,8 @@
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.StringUtils;
 import net.minecraft.world.WorldSettings;
-import net.minecraft.world.storage.WorldSummary;
 import net.minecraft.world.storage.SaveFormatOld;
+import net.minecraft.world.storage.WorldSummary;
 import net.minecraftforge.client.CloudRenderer;
 import net.minecraftforge.client.IRenderHandler;
 import net.minecraftforge.client.event.ModelRegistryEvent;
@@ -93,29 +75,13 @@
 import net.minecraftforge.common.config.ConfigManager;
 import net.minecraftforge.common.util.CompoundDataFixer;
 import net.minecraftforge.fml.client.registry.RenderingRegistry;
-import net.minecraftforge.fml.common.DummyModContainer;
-import net.minecraftforge.fml.common.DuplicateModsFoundException;
-import net.minecraftforge.fml.common.FMLCommonHandler;
-import net.minecraftforge.fml.common.FMLContainerHolder;
-import net.minecraftforge.fml.common.FMLLog;
-import net.minecraftforge.fml.common.IFMLSidedHandler;
-import net.minecraftforge.fml.common.Loader;
-import net.minecraftforge.fml.common.LoaderException;
-import net.minecraftforge.fml.common.MetadataCollection;
-import net.minecraftforge.fml.common.MissingModsException;
-import net.minecraftforge.fml.common.MultipleModsErrored;
-import net.minecraftforge.fml.common.ModContainer;
-import net.minecraftforge.fml.common.ModMetadata;
-import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
-import net.minecraftforge.fml.common.StartupQuery;
-import net.minecraftforge.fml.common.WrongMinecraftVersionException;
+import net.minecraftforge.fml.common.*;
 import net.minecraftforge.fml.common.eventhandler.EventBus;
 import net.minecraftforge.fml.common.network.FMLNetworkEvent;
 import net.minecraftforge.fml.common.network.internal.FMLNetworkHandler;
 import net.minecraftforge.fml.common.toposort.ModSortingException;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.registries.GameData;
-
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.message.FormattedMessage;
@@ -123,27 +89,17 @@
 import org.lwjgl.input.Mouse;
 import org.lwjgl.opengl.Display;
 
-import com.google.common.base.CharMatcher;
-import com.google.common.base.MoreObjects;
-import com.google.common.base.Strings;
-import com.google.common.base.Throwables;
-import com.google.common.collect.BiMap;
-import com.google.common.collect.HashBasedTable;
-import com.google.common.collect.HashBiMap;
-import com.google.common.collect.HashMultimap;
-import com.google.common.collect.ImmutableList;
-import com.google.common.collect.ImmutableMap;
-import com.google.common.collect.ImmutableMap.Builder;
-import com.google.common.collect.Maps;
-import com.google.common.collect.SetMultimap;
-import com.google.common.collect.Sets;
-import com.google.common.collect.Table;
-import com.google.common.util.concurrent.ListenableFuture;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-
 import javax.annotation.Nullable;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.lang.ref.WeakReference;
+import java.util.*;
+import java.util.Map.Entry;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.function.Predicate;
 
 
 /**
@@ -221,7 +177,7 @@
         this.resourcePackMap = Maps.newHashMap();
         if (minecraft.isDemo())
         {
-            FMLLog.log.fatal("DEMO MODE DETECTED, FML will not work. Finishing now.");
+            Mohist.LOGGER.fatal("DEMO MODE DETECTED, FML will not work. Finishing now.");
             haltGame("FML will not run in demo mode", new RuntimeException());
             return;
         }
@@ -233,7 +189,7 @@
         }
         catch (WrongMinecraftVersionException | DuplicateModsFoundException | MissingModsException | ModSortingException | CustomModLoadingErrorDisplayException | MultipleModsErrored e)
         {
-            FMLLog.log.error("An exception was thrown, the game will display an error screen and halt.", e);
+            Mohist.LOGGER.error("An exception was thrown, the game will display an error screen and halt.", e);
             errorToDisplay = e;
             MinecraftForge.EVENT_BUS.shutdown();
         }
@@ -256,7 +212,7 @@
             if (le.getCause() instanceof CustomModLoadingErrorDisplayException)
             {
                 CustomModLoadingErrorDisplayException custom = (CustomModLoadingErrorDisplayException) le.getCause();
-                FMLLog.log.error("A custom exception was thrown by a mod, the game will display an error screen and halt.", custom);
+                Mohist.LOGGER.error("A custom exception was thrown by a mod, the game will display an error screen and halt.", custom);
                 errorToDisplay = custom;
                 MinecraftForge.EVENT_BUS.shutdown();
             }
@@ -296,7 +252,7 @@
             {
                 ModMetadata optifineMetadata = MetadataCollection.from(optifineModInfoInputStream, "optifine").getMetadataForId("optifine", dummyOptifineMeta);
                 optifineContainer = new DummyModContainer(optifineMetadata);
-                FMLLog.log.info("Forge Mod Loader has detected optifine {}, enabling compatibility features", optifineContainer.getVersion());
+                Mohist.LOGGER.info("Forge Mod Loader has detected optifine {}, enabling compatibility features", optifineContainer.getVersion());
             }
         }
         catch (Exception e)
@@ -340,7 +296,7 @@
             if (le.getCause() instanceof CustomModLoadingErrorDisplayException)
             {
                 CustomModLoadingErrorDisplayException custom = (CustomModLoadingErrorDisplayException) le.getCause();
-                FMLLog.log.error("A custom exception was thrown by a mod, the game will display an error screen and halt.", custom);
+                Mohist.LOGGER.error("A custom exception was thrown by a mod, the game will display an error screen and halt.", custom);
                 errorToDisplay = custom;
                 MinecraftForge.EVENT_BUS.shutdown();
             }
@@ -382,7 +338,7 @@
                 guiFactories.put(mc, guiFactory);
             } catch (Exception e)
             {
-                FMLLog.log.error("A critical error occurred instantiating the gui factory for mod {}", mc.getModId(), e);
+                Mohist.LOGGER.error("A critical error occurred instantiating the gui factory for mod {}", mc.getModId(), e);
             }
         }
         loading = false;
@@ -646,7 +602,7 @@
             }
             catch (NoSuchMethodException e)
             {
-                FMLLog.log.error("The container {} (type {}) returned an invalid class for its resource pack.", container.getName(), container.getClass().getName());
+                Mohist.LOGGER.error("The container {} (type {}) returned an invalid class for its resource pack.", container.getName(), container.getClass().getName());
             }
             catch (Exception e)
             {
@@ -718,7 +674,7 @@
             }
             catch (Exception e1)
             {
-                FMLLog.log.warn("There appears to be a problem loading the save {}, both level files are unreadable.", comparator.getFileName());
+                Mohist.LOGGER.warn("There appears to be a problem loading the save {}, both level files are unreadable.", comparator.getFileName());
                 return;
             }
         }
@@ -790,7 +746,7 @@
             boolean moddedClientAllowed = true;
             if (!Strings.isNullOrEmpty(serverDescription))
             {
-                moddedClientAllowed = !serverDescription.endsWith(":NOFML§r");
+                moddedClientAllowed = !serverDescription.endsWith(":NOFML��r");
             }
             serverDataTag.put(data, new ExtendedServerListData("VANILLA", false, ImmutableMap.of(), !moddedClientAllowed));
         }
@@ -852,7 +808,7 @@
 
     public String fixDescription(String description)
     {
-        return description.endsWith(":NOFML§r") ? description.substring(0, description.length() - 8)+"§r" : description;
+        return description.endsWith(":NOFML��r") ? description.substring(0, description.length() - 8)+"��r" : description;
     }
 
     public void connectToServerAtStartup(String host, int port)
@@ -1116,6 +1072,7 @@
         return getCloudRenderer().render(cloudTicks, partialTicks);
     }
 
+
     public void refreshResources(IResourceType... inclusion)
     {
         this.refreshResources(ReloadRequirements.include(inclusion));
