--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/ItemStackHolderInjector.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/ItemStackHolderInjector.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,18 +19,17 @@
 
 package net.minecraftforge.fml.common.registry;
 
+import cn.pfcraft.server.Mohist;
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import net.minecraftforge.fml.common.discovery.ASMDataTable;
+import net.minecraftforge.fml.common.discovery.ASMDataTable.ASMData;
+
 import java.lang.reflect.Field;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import net.minecraftforge.fml.common.FMLLog;
-import net.minecraftforge.fml.common.discovery.ASMDataTable;
-import net.minecraftforge.fml.common.discovery.ASMDataTable.ASMData;
-
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-
 public enum ItemStackHolderInjector
 {
     INSTANCE;
@@ -38,15 +37,15 @@
     private List<ItemStackHolderRef> itemStackHolders = Lists.newArrayList();
 
     public void inject() {
-        FMLLog.log.info("Injecting itemstacks");
+        Mohist.LOGGER.info("Injecting itemstacks");
         for (ItemStackHolderRef ishr: itemStackHolders) {
             ishr.apply();
         }
-        FMLLog.log.info("Itemstack injection complete");
+        Mohist.LOGGER.info("Itemstack injection complete");
     }
 
     public void findHolders(ASMDataTable table) {
-        FMLLog.log.info("Identifying ItemStackHolder annotations");
+        Mohist.LOGGER.info("Identifying ItemStackHolder annotations");
         Set<ASMData> allItemStackHolders = table.getAll(GameRegistry.ItemStackHolder.class.getName());
         Map<String, Class<?>> classCache = Maps.newHashMap();
         for (ASMData data : allItemStackHolders)
@@ -58,7 +57,7 @@
             String nbt = data.getAnnotationInfo().containsKey("nbt") ? (String) data.getAnnotationInfo().get("nbt") : "";
             addHolder(classCache, className, annotationTarget, value, meta, nbt);
         }
-        FMLLog.log.info("Found {} ItemStackHolder annotations", allItemStackHolders.size());
+        Mohist.LOGGER.info("Found {} ItemStackHolder annotations", allItemStackHolders.size());
 
     }
 
