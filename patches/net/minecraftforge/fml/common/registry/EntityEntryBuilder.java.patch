--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/EntityEntryBuilder.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/EntityEntryBuilder.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -16,9 +16,9 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
-
 package net.minecraftforge.fml.common.registry;
 
+import cn.pfcraft.server.Mohist;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityList;
 import net.minecraft.entity.EntityLiving;
@@ -28,12 +28,12 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraft.world.World;
 import net.minecraft.world.biome.Biome;
-import net.minecraftforge.fml.common.FMLLog;
 import net.minecraftforge.fml.common.Loader;
 import net.minecraftforge.fml.common.ModContainer;
 import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
-import net.minecraftforge.fml.relauncher.ReflectionHelper.UnknownConstructorException;
 
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationTargetException;
 import java.util.ArrayList;
@@ -42,13 +42,8 @@
 import java.util.List;
 import java.util.function.Function;
 
-import javax.annotation.Nonnull;
-import javax.annotation.Nullable;
+import static com.google.common.base.Preconditions.*;
 
-import static com.google.common.base.Preconditions.checkArgument;
-import static com.google.common.base.Preconditions.checkNotNull;
-import static com.google.common.base.Preconditions.checkState;
-
 /**
  * An entity registry entry builder.
  *
@@ -306,7 +301,7 @@
             }
             catch (final IllegalAccessException | InstantiationException | InvocationTargetException e)
             {
-                FMLLog.log.error("Encountered an exception while constructing entity '{}'", this.describeEntity(), e);
+                Mohist.LOGGER.error("Encountered an exception while constructing entity '{}'", this.describeEntity(), e);
                 return null;
             }
         }
@@ -343,17 +338,15 @@
                 EntityEntryBuilder.this.spawns = null;
             }
         }
-
         @Nonnull
         private EntityRegistry.EntityRegistration createRegistration()
         {
             EntityEntryBuilder<E> builder = EntityEntryBuilder.this;
             return EntityRegistry.instance().new EntityRegistration(
-                builder.mod, builder.id, builder.entity, builder.name, builder.network,
-                builder.trackingRange, builder.trackingUpdateFrequency, builder.trackingVelocityUpdates, this.factory
+                    builder.mod, builder.id, builder.entity, builder.name, builder.network,
+                    builder.trackingRange, builder.trackingUpdateFrequency, builder.trackingVelocityUpdates, this.factory
             );
         }
-
     }
 
     public final class Spawn
