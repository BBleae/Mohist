--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/ItemStackHolderRef.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/ItemStackHolderRef.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,13 +19,13 @@
 
 package net.minecraftforge.fml.common.registry;
 
+import cn.pfcraft.server.Mohist;
+import net.minecraft.item.ItemStack;
+
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 
-import net.minecraft.item.ItemStack;
-import net.minecraftforge.fml.common.FMLLog;
-
 /**
  * Internal class used in tracking {@link GameRegistry.ItemStackHolder} references
  *
@@ -81,7 +81,7 @@
             is = GameRegistry.makeItemStack(itemName, meta, 1, serializednbt);
         } catch (RuntimeException e)
         {
-            FMLLog.log.error("Caught exception processing itemstack {},{},{} in annotation at {}.{}", itemName, meta, serializednbt,field.getClass().getName(),field.getName());
+            Mohist.LOGGER.error("Caught exception processing itemstack {},{},{} in annotation at {}.{}", itemName, meta, serializednbt,field.getClass().getName(),field.getName());
             throw e;
         }
         try
@@ -91,7 +91,7 @@
         }
         catch (Exception e)
         {
-            FMLLog.log.warn("Unable to set {} with value {},{},{}", this.field, this.itemName, this.meta, this.serializednbt);
+            Mohist.LOGGER.warn("Unable to set {} with value {},{},{}", this.field, this.itemName, this.meta, this.serializednbt);
         }
     }
 }
