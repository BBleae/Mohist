--- ../src-base/minecraft/net/minecraftforge/fml/common/discovery/json/JsonAnnotationLoader.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/discovery/json/JsonAnnotationLoader.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2018.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -16,29 +16,26 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
-
 package net.minecraftforge.fml.common.discovery.json;
 
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.nio.charset.StandardCharsets;
-import java.util.Map;
-import java.util.Map.Entry;
-
-import org.objectweb.asm.Type;
-
 import com.google.common.collect.HashMultimap;
 import com.google.common.collect.Multimap;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.reflect.TypeToken;
-
 import net.minecraftforge.fml.common.discovery.ASMDataTable;
 import net.minecraftforge.fml.common.discovery.ASMDataTable.ASMData;
 import net.minecraftforge.fml.common.discovery.ModCandidate;
 import net.minecraftforge.fml.common.discovery.json.ASMInfo.Annotation;
-import net.minecraftforge.fml.common.discovery.json.ASMInfo.TargetType;
+import org.objectweb.asm.Type;
 
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
+import java.util.Map;
+import java.util.Map.Entry;
+
+
 public class JsonAnnotationLoader
 {
     public static final String ANNOTATION_JSON = "META-INF/fml_cache_annotation.json";
@@ -70,14 +67,13 @@
                 }
             }
 
-
             String owner_name = asm_info.name.replace('/', '.');
             if (asm_info.annotations != null)
             {
                 for (Annotation anno : asm_info.annotations)
                 {
                     String name = anno.name.indexOf(';') > 0 ? Type.getType(anno.name).getClassName() : anno.name;
-                    String target = anno.target != null && (anno.type == TargetType.CLASS || anno.type == TargetType.SUBTYPE) ? anno.target.replace('/', '.') : anno.target;
+                    String target = anno.target != null && (anno.type == ASMInfo.TargetType.CLASS || anno.type == ASMInfo.TargetType.SUBTYPE) ? anno.target.replace('/', '.') : anno.target;
 
                     table.addASMData(candidate, name, owner_name, target, anno.getValues(asm_info));
                     ret.put(name, new ASMData(candidate, name, owner_name, target, anno.getValues(asm_info)));
