--- ../src-base/minecraft/net/minecraftforge/fml/common/discovery/ASMDataTable.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/discovery/ASMDataTable.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,24 +19,16 @@
 
 package net.minecraftforge.fml.common.discovery;
 
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import javax.annotation.Nullable;
-
 import com.google.common.base.Predicate;
-import com.google.common.collect.HashMultimap;
-import com.google.common.collect.ImmutableMap;
-import com.google.common.collect.ImmutableSetMultimap;
-import com.google.common.collect.Lists;
-import com.google.common.collect.Multimap;
-import com.google.common.collect.Multimaps;
-import com.google.common.collect.SetMultimap;
-
+import com.google.common.collect.*;
 import net.minecraftforge.fml.common.ModContainer;
 import org.apache.commons.lang3.tuple.Pair;
 
+import javax.annotation.Nullable;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
 public class ASMDataTable
 {
     public final static class ASMData implements Cloneable
@@ -114,7 +106,6 @@
     {
         if (containerAnnotationData == null)
         {
-            //concurrently filter the values to speed this up
             containerAnnotationData = containers.parallelStream()
                     .map(cont -> Pair.of(cont, ImmutableSetMultimap.copyOf(Multimaps.filterValues(globalAnnotationData, new ModContainerPredicate(cont)))))
                     .collect(ImmutableMap.toImmutableMap(Pair::getKey, Pair::getValue));
