--- ../src-base/minecraft/net/minecraftforge/fml/common/asm/transformers/TerminalTransformer.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/asm/transformers/TerminalTransformer.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,11 +19,10 @@
 
 package net.minecraftforge.fml.common.asm.transformers;
 
-import org.objectweb.asm.*;
-
+import cn.pfcraft.server.Mohist;
 import net.minecraft.launchwrapper.IClassTransformer;
-import net.minecraftforge.fml.common.FMLLog;
 import net.minecraftforge.fml.relauncher.FMLSecurityManager.ExitTrappedException;
+import org.objectweb.asm.*;
 
 public class TerminalTransformer implements IClassTransformer
 {
@@ -83,11 +82,11 @@
                     {
                         if (warn)
                         {
-                            FMLLog.log.warn("=============================================================");
-                            FMLLog.log.warn("MOD HAS DIRECT REFERENCE System.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
-                            FMLLog.log.warn("Offender: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
-                            FMLLog.log.warn("Use FMLCommonHandler.exitJava instead");
-                            FMLLog.log.warn("=============================================================");
+                            Mohist.LOGGER.warn("=============================================================");
+                            Mohist.LOGGER.warn("MOD HAS DIRECT REFERENCE System.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
+                            Mohist.LOGGER.warn("Offender: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
+                            Mohist.LOGGER.warn("Use FMLCommonHandler.exitJava instead");
+                            Mohist.LOGGER.warn("=============================================================");
                         }
                         owner = ExitVisitor.callbackOwner;
                         name = "systemExitCalled";
@@ -97,11 +96,11 @@
                     {
                         if (warn)
                         {
-                            FMLLog.log.warn("=============================================================");
-                            FMLLog.log.warn("MOD HAS DIRECT REFERENCE Runtime.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
-                            FMLLog.log.warn("Offender: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
-                            FMLLog.log.warn("Use FMLCommonHandler.exitJava instead");
-                            FMLLog.log.warn("=============================================================");
+                            Mohist.LOGGER.warn("=============================================================");
+                            Mohist.LOGGER.warn("MOD HAS DIRECT REFERENCE Runtime.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
+                            Mohist.LOGGER.warn("Offender: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
+                            Mohist.LOGGER.warn("Use FMLCommonHandler.exitJava instead");
+                            Mohist.LOGGER.warn("=============================================================");
                         }
                         opcode = Opcodes.INVOKESTATIC;
                         owner = ExitVisitor.callbackOwner;
@@ -113,11 +112,11 @@
                     {
                         if (warn)
                         {
-                            FMLLog.log.warn("=============================================================");
-                            FMLLog.log.warn("MOD HAS DIRECT REFERENCE Runtime.halt() THIS IS NOT ALLOWED REROUTING TO FML!");
-                            FMLLog.log.warn("Offendor: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
-                            FMLLog.log.warn("Use FMLCommonHandler.exitJava instead");
-                            FMLLog.log.warn("=============================================================");
+                            Mohist.LOGGER.warn("=============================================================");
+                            Mohist.LOGGER.warn("MOD HAS DIRECT REFERENCE Runtime.halt() THIS IS NOT ALLOWED REROUTING TO FML!");
+                            Mohist.LOGGER.warn("Offendor: {}.{}{}", ExitVisitor.this.clsName, mName, mDesc);
+                            Mohist.LOGGER.warn("Use FMLCommonHandler.exitJava instead");
+                            Mohist.LOGGER.warn("=============================================================");
                         }
                         opcode = Opcodes.INVOKESTATIC;
                         owner = ExitVisitor.callbackOwner;
