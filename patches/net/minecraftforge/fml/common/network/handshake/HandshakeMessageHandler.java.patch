--- ../src-base/minecraft/net/minecraftforge/fml/common/network/handshake/HandshakeMessageHandler.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/network/handshake/HandshakeMessageHandler.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,8 +19,7 @@
 
 package net.minecraftforge.fml.common.network.handshake;
 
-import net.minecraftforge.fml.common.FMLLog;
-
+import cn.pfcraft.server.Mohist;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.SimpleChannelInboundHandler;
 import io.netty.util.AttributeKey;
@@ -44,10 +43,10 @@
     protected void channelRead0(ChannelHandlerContext ctx, FMLHandshakeMessage msg) throws Exception
     {
         S state = ctx.channel().attr(fmlHandshakeState).get();
-        FMLLog.log.debug("{}: {}->{}:{}", stateType.getSimpleName(), msg.toString(stateType), state.getClass().getName().substring(state.getClass().getName().lastIndexOf('.')+1), state);
+        Mohist.LOGGER.debug("{}: {}->{}:{}", stateType.getSimpleName(), msg.toString(stateType), state.getClass().getName().substring(state.getClass().getName().lastIndexOf('.')+1), state);
         state.accept(ctx, msg, s ->
         {
-            FMLLog.log.debug("  Next: {}", s.name());
+            Mohist.LOGGER.debug("  Next: {}", s.name());
             ctx.channel().attr(fmlHandshakeState).set(s);
         });
     }
@@ -61,10 +60,10 @@
     public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception
     {
         S state = ctx.channel().attr(fmlHandshakeState).get();
-        FMLLog.log.debug("{}: null->{}:{}", stateType.getSimpleName(), state.getClass().getName().substring(state.getClass().getName().lastIndexOf('.')+1), state);
+        Mohist.LOGGER.debug("{}: null->{}:{}", stateType.getSimpleName(), state.getClass().getName().substring(state.getClass().getName().lastIndexOf('.')+1), state);
         state.accept(ctx, null, s ->
         {
-            FMLLog.log.debug("  Next: {}", s.name());
+            Mohist.LOGGER.debug("  Next: {}", s.name());
             ctx.channel().attr(fmlHandshakeState).set(s);
         });
     }
@@ -72,7 +71,7 @@
     @Override
     public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception
     {
-        FMLLog.log.error("HandshakeMessageHandler exception", cause);
+        Mohist.LOGGER.error("HandshakeMessageHandler exception", cause);
         ctx.channel().attr(fmlHandshakeState).set(errorState);
         super.exceptionCaught(ctx, cause);
     }
