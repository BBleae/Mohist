--- ../src-base/minecraft/net/minecraftforge/fml/relauncher/libraries/LinkRepository.java
+++ ../src-work/minecraft/net/minecraftforge/fml/relauncher/libraries/LinkRepository.java
@@ -16,18 +16,13 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
-
 package net.minecraftforge.fml.relauncher.libraries;
 
+import cn.pfcraft.server.Mohist;
+
 import java.io.File;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
 
-import net.minecraftforge.fml.common.FMLLog;
-
 public class LinkRepository extends Repository
 {
     private Map<String, File> artifact_to_file = new HashMap<>();
@@ -46,14 +41,14 @@
         known.add(file);
         if (artifact_to_file.containsKey(key))
         {
-            FMLLog.log.debug("Maven file already exists for {}({}) at {}, ignoring duplicate.", file.getName(), artifact.toString(), artifact_to_file.get(key).getAbsolutePath());
+            Mohist.LOGGER.debug("Maven file already exists for {}({}) at {}, ignoring duplicate.", file.getName(), artifact.toString(), artifact_to_file.get(key).getAbsolutePath());
 
             if (artifact.isSnapshot())
             {
                 Artifact old = snapshots.get(key);
                 if (old == null || old.compareVersion(artifact) < 0)
                 {
-                    FMLLog.log.debug("Overriding Snapshot {} -> {}", old == null ? "null" : old.getTimestamp(), artifact.getTimestamp());
+                    Mohist.LOGGER.debug("Overriding Snapshot {} -> {}", old == null ? "null" : old.getTimestamp(), artifact.getTimestamp());
                     snapshots.put(key, artifact);
                     artifact_to_file.put(key, file);
                     filesystem.put(artifact.getPath(), file);
@@ -62,7 +57,7 @@
         }
         else
         {
-            FMLLog.log.debug("Making maven link for {} in memory to {}.", key, file.getAbsolutePath());
+            Mohist.LOGGER.debug("Making maven link for {} in memory to {}.", key, file.getAbsolutePath());
             artifact_to_file.put(key, file);
             filesystem.put(artifact.getPath(), file);
 
