--- ../src-base/minecraft/net/minecraftforge/common/BiomeDictionary.java
+++ ../src-work/minecraft/net/minecraftforge/common/BiomeDictionary.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -19,22 +19,21 @@
 
 package net.minecraftforge.common;
 
-import java.util.*;
-import java.util.stream.Collectors;
-
-import javax.annotation.Nonnull;
-
+import cn.pfcraft.server.Mohist;
+import com.google.common.base.Preconditions;
+import com.google.common.collect.ImmutableList;
 import net.minecraft.init.Biomes;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.ResourceLocation;
-import net.minecraft.world.biome.*;
-import static net.minecraftforge.common.BiomeDictionary.Type.*;
-import net.minecraftforge.fml.common.FMLLog;
+import net.minecraft.world.biome.Biome;
 import net.minecraftforge.fml.common.registry.ForgeRegistries;
 
-import com.google.common.base.Preconditions;
-import com.google.common.collect.ImmutableList;
+import javax.annotation.Nonnull;
+import java.util.*;
+import java.util.stream.Collectors;
 
+import static net.minecraftforge.common.BiomeDictionary.Type.*;
+
 public class BiomeDictionary
 {
     private static final boolean DEBUG = false;
@@ -380,7 +379,7 @@
         if (!hasAnyType(biome))
         {
             makeBestGuess(biome);
-            FMLLog.log.warn("No types have been added to Biome {}, types have been assigned on a best-effort guess: {}", biome.getRegistryName(), getTypes(biome));
+            Mohist.LOGGER.warn("No types have been added to Biome {}, types have been assigned on a best-effort guess: {}", biome.getRegistryName(), getTypes(biome));
         }
     }
 
@@ -472,12 +471,12 @@
 
         if (DEBUG)
         {
-            FMLLog.log.debug("BiomeDictionary:");
+            Mohist.LOGGER.debug("BiomeDictionary:");
             for (Type type : Type.byName.values())
             {
                 StringBuilder buf = new StringBuilder();
                 buf.append("    ").append(type.name).append(": ").append(type.biomes.stream().map(Biome::getBiomeName).collect(Collectors.joining(", ")));
-                FMLLog.log.debug(buf.toString());
+                Mohist.LOGGER.debug(buf.toString());
             }
         }
     }
