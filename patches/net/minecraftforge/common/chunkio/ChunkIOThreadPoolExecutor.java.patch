--- ../src-base/minecraft/net/minecraftforge/common/chunkio/ChunkIOThreadPoolExecutor.java
+++ ../src-work/minecraft/net/minecraftforge/common/chunkio/ChunkIOThreadPoolExecutor.java
@@ -19,14 +19,14 @@
 
 package net.minecraftforge.common.chunkio;
 
+import cn.pfcraft.server.Mohist;
+import net.minecraft.crash.CrashReportCategory;
+
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
-import net.minecraft.crash.CrashReportCategory;
-import net.minecraftforge.fml.common.FMLLog;
-
 class ChunkIOThreadPoolExecutor extends ThreadPoolExecutor {
 
     public ChunkIOThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory)
@@ -41,14 +41,14 @@
         {
             try
             {
-                FMLLog.log.error("Unhandled exception loading chunk:", t);
+                Mohist.LOGGER.error("Unhandled exception loading chunk:", t);
                 QueuedChunk queuedChunk = ((ChunkIOProvider) r).getChunkInfo();
-                FMLLog.log.error(queuedChunk);
-                FMLLog.log.error(CrashReportCategory.getCoordinateInfo(queuedChunk.x << 4, 64, queuedChunk.z << 4));
+                Mohist.LOGGER.error(queuedChunk);
+                Mohist.LOGGER.error(CrashReportCategory.getCoordinateInfo(queuedChunk.x << 4, 64, queuedChunk.z << 4));
             }
             catch (Throwable t2)
             {
-                FMLLog.log.error(t2);
+                Mohist.LOGGER.error(t2);
             }
             finally
             {
