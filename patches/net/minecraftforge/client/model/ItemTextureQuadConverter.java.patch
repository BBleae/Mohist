--- ../src-base/minecraft/net/minecraftforge/client/model/ItemTextureQuadConverter.java
+++ ../src-work/minecraft/net/minecraftforge/client/model/ItemTextureQuadConverter.java
@@ -1,6 +1,6 @@
 /*
  * Minecraft Forge
- * Copyright (c) 2016-2018.
+ * Copyright (c) 2016.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -20,7 +20,6 @@
 package net.minecraftforge.client.model;
 
 import com.google.common.collect.Lists;
-
 import net.minecraft.client.renderer.texture.TextureAtlasSprite;
 import net.minecraft.client.renderer.vertex.VertexFormat;
 import net.minecraft.util.EnumFacing;
@@ -28,7 +27,6 @@
 import net.minecraftforge.common.model.TRSRTransformation;
 
 import javax.vecmath.Vector4f;
-
 import java.util.List;
 
 public final class ItemTextureQuadConverter
@@ -45,6 +43,7 @@
         return convertTexture(format, transform, template, sprite, z, facing, color, -1);
     }
 
+
     /**
      * Takes a texture and converts it into BakedQuads.
      * The conversion is done by scanning the texture horizontally and vertically and creating "strips" of the texture.
@@ -55,8 +54,7 @@
      *
      * @param format
      * @param template The input texture to convert
-     * @param sprite   The texture whose UVs shall be used
-     * @return The generated quads.
+     * @param sprite   The texture whose UVs shall be used   @return The generated quads.
      */
     public static List<UnpackedBakedQuad> convertTexture(VertexFormat format, TRSRTransformation transform, TextureAtlasSprite template, TextureAtlasSprite sprite, float z, EnumFacing facing, int color, int tint)
     {
@@ -131,7 +129,7 @@
                                       (float)y * hScale,
                                       (float)x * wScale,
                                       (float)endY * hScale,
-                                      z, sprite, facing, color, tint));
+                                         z, sprite, facing, color, tint));
 
                     // update Y if all the rows match. no need to rescan
                     if (endY - y > 1)
@@ -154,6 +152,7 @@
         return convertTextureVertical(format, transform, template, sprite, z, facing, color, -1);
     }
 
+
     /**
      * Scans a texture and converts it into a list of vertical strips stacked next to each other from left to right.
      * The width of the strips is as big as possible.
@@ -212,7 +211,7 @@
                                       (float)start * hScale,
                                       (float)endX * wScale,
                                       (float)y * hScale,
-                                      z, sprite, facing, color, tint));
+                                         z, sprite, facing, color, tint));
 
                     // update X if all the columns match. no need to rescan
                     if (endX - x > 1)
@@ -240,6 +239,7 @@
         return genQuad(format, transform, x1, y1, x2, y2, z, sprite, facing, color, -1);
     }
 
+
     /**
      * Generates a Front/Back quad for an itemmodel. Therefore only supports facing NORTH and SOUTH.
      * Coordinates are [0,16] to match the usual coordinates used in TextureAtlasSprites
@@ -268,7 +268,6 @@
                                              float u1, float v1, float u2, float v2)
     {
         UnpackedBakedQuad.Builder builder = new UnpackedBakedQuad.Builder(format);
-
         builder.setQuadTint(tint);
         builder.setQuadOrientation(side);
         builder.setTexture(sprite);
