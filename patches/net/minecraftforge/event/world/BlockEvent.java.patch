--- ../src-base/minecraft/net/minecraftforge/event/world/BlockEvent.java
+++ ../src-work/minecraft/net/minecraftforge/event/world/BlockEvent.java
@@ -125,15 +125,15 @@
             super(world, pos, state);
             this.player = player;
 
-            if (state == null || !ForgeHooks.canHarvestBlock(state.getBlock(), player, world, pos) || // Handle empty block or player unable to break block scenario
-                (state.getBlock().canSilkHarvest(world, pos, world.getBlockState(pos), player) && EnchantmentHelper.getEnchantmentLevel(Enchantments.SILK_TOUCH, player.getHeldItemMainhand()) > 0)) // If the block is being silk harvested, the exp dropped is 0
-            {
-                this.exp = 0;
+            org.bukkit.event.block.BlockBreakEvent bukkitEvent = CraftEventFactory.callBlockBreakEvent(world, pos, state, (EntityPlayerMP) player);
+
+
+            if(bukkitEvent.isCancelled()){
+                this.setCanceled(true);
             }
             else
             {
-                int bonusLevel = EnchantmentHelper.getEnchantmentLevel(Enchantments.FORTUNE, player.getHeldItemMainhand());
-                this.exp = state.getBlock().getExpDrop(state, world, pos, bonusLevel);
+                this.exp = bukkitEvent.getExpToDrop();
             }
         }
 
@@ -213,6 +213,11 @@
             super(blockSnapshot, placedAgainst, player);
             this.player = player;
             this.hand = hand;
+            org.bukkit.craftbukkit.block.CraftBlockState blockstate = org.bukkit.craftbukkit.block.CraftBlockState.getBlockState(super.world, super.pos.getX(), super.pos.getY(), super.pos.getZ());
+            org.bukkit.event.block.BlockPlaceEvent bukkitEvent = CraftEventFactory.callBlockPlaceEvent(super.world, player, hand , blockstate, super.pos.getX(), super.pos.getY(), super.pos.getZ());
+            if (bukkitEvent.isCancelled() || !bukkitEvent.canBuild()) {
+                this.setCanceled(true);
+            }
             if (DEBUG)
             {
                 System.out.printf("Created PlaceEvent - [PlacedBlock: %s ][PlacedAgainst: %s ][ItemStack: %s ][Player: %s ][Hand: %s]\n", getPlacedBlock(), placedAgainst, player.getHeldItem(hand), player, hand);
@@ -399,6 +404,7 @@
         }
     }
 
+
     /**
      * Fired when a crop block grows.  See subevents.
      *
@@ -462,25 +468,20 @@
     @Cancelable
     public static class FarmlandTrampleEvent extends BlockEvent
     {
-
         private final Entity entity;
         private final float fallDistance;
-
         public FarmlandTrampleEvent(World world, BlockPos pos, IBlockState state, float fallDistance, Entity entity)
         {
             super(world, pos, state);
             this.entity = entity;
             this.fallDistance = fallDistance;
         }
-
         public Entity getEntity() {
             return entity;
         }
-
         public float getFallDistance() {
             return fallDistance;
         }
-
     }
 
     /* Fired when an attempt is made to spawn a nether portal from
@@ -492,13 +493,11 @@
     public static class PortalSpawnEvent extends BlockEvent
     {
         private final BlockPortal.Size size;
-
         public PortalSpawnEvent(World world, BlockPos pos, IBlockState state, BlockPortal.Size size)
         {
             super(world, pos, state);
             this.size = size;
         }
-
         public BlockPortal.Size getPortalSize()
         {
             return size;
