--- ../src-base/minecraft/net/minecraft/network/LegacyPingHandler.java
+++ ../src-work/minecraft/net/minecraft/network/LegacyPingHandler.java
@@ -1,16 +1,18 @@
 package net.minecraft.network;
 
+import com.destroystokyo.paper.network.PaperLegacyStatusClient;
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.Unpooled;
 import io.netty.channel.ChannelFutureListener;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
-import java.net.InetSocketAddress;
-import java.nio.charset.StandardCharsets;
 import net.minecraft.server.MinecraftServer;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import java.net.InetSocketAddress;
+import java.nio.charset.StandardCharsets;
+
 public class LegacyPingHandler extends ChannelInboundHandlerAdapter
 {
     private static final Logger LOGGER = LogManager.getLogger();
@@ -34,12 +36,20 @@
                 InetSocketAddress inetsocketaddress = (InetSocketAddress)p_channelRead_1_.channel().remoteAddress();
                 MinecraftServer minecraftserver = this.networkSystem.getServer();
                 int i = bytebuf.readableBytes();
+                com.destroystokyo.paper.event.server.PaperServerListPingEvent event; // Paper
 
                 switch (i)
                 {
                     case 0:
                         LOGGER.debug("Ping: (<1.3.x) from {}:{}", inetsocketaddress.getAddress(), Integer.valueOf(inetsocketaddress.getPort()));
-                        String s2 = String.format("%s\u00a7%d\u00a7%d", minecraftserver.getMOTD(), minecraftserver.getCurrentPlayerCount(), minecraftserver.getMaxPlayers());
+                        // Paper start - Call PaperServerListPingEvent and use results
+                        event = PaperLegacyStatusClient.processRequest(minecraftserver, inetsocketaddress, 39, null);
+                        if (event == null) {
+                            channelhandlercontext.close();
+                            break;
+                        }
+                        String s2 = String.format("%s\u00a7%d\u00a7%d", PaperLegacyStatusClient.getUnformattedMotd(event), event.getNumPlayers(), event.getMaxPlayers());
+                        // Paper end
                         this.writeAndFlush(p_channelRead_1_, this.getStringBuffer(s2));
                         break;
                     case 1:
@@ -50,7 +60,15 @@
                         }
 
                         LOGGER.debug("Ping: (1.4-1.5.x) from {}:{}", inetsocketaddress.getAddress(), Integer.valueOf(inetsocketaddress.getPort()));
-                        String s = String.format("\u00a71\u0000%d\u0000%s\u0000%s\u0000%d\u0000%d", Integer.valueOf(127), minecraftserver.getMinecraftVersion(), minecraftserver.getMOTD(), minecraftserver.getCurrentPlayerCount(), minecraftserver.getMaxPlayers());
+                        // Paper start - Call PaperServerListPingEvent and use results
+                        event = PaperLegacyStatusClient.processRequest(minecraftserver, inetsocketaddress, 61, null);
+                        if (event == null) {
+                            channelhandlercontext.close();
+                            break;
+                        }
+                        String s = String.format("\u00a71\u0000%d\u0000%s\u0000%s\u0000%d\u0000%d", event.getProtocolVersion(), event.getVersion(),
+                                PaperLegacyStatusClient.getMotd(event), event.getNumPlayers(), event.getMaxPlayers());
+                        // Paper end
                         this.writeAndFlush(p_channelRead_1_, this.getStringBuffer(s));
                         break;
                     default:
@@ -69,7 +87,15 @@
                         }
 
                         LOGGER.debug("Ping: (1.6) from {}:{}", inetsocketaddress.getAddress(), Integer.valueOf(inetsocketaddress.getPort()));
-                        String s1 = String.format("\u00a71\u0000%d\u0000%s\u0000%s\u0000%d\u0000%d", Integer.valueOf(127), minecraftserver.getMinecraftVersion(), minecraftserver.getMOTD(), minecraftserver.getCurrentPlayerCount(), minecraftserver.getMaxPlayers());
+                        InetSocketAddress virtualHost = com.destroystokyo.paper.network.PaperNetworkClient.prepareVirtualHost(host, port);
+                        event = PaperLegacyStatusClient.processRequest(
+                                server, (InetSocketAddress) ctx.channel().remoteAddress(), protocolVersion, virtualHost);
+                        if (event == null) {
+                            ctx.close();
+                            return;
+                        }
+                        String s1 = String.format("\u00a71\u0000%d\u0000%s\u0000%s\u0000%d\u0000%d", event.getProtocolVersion(), event.getVersion(),
+                                PaperLegacyStatusClient.getMotd(event), event.getNumPlayers(), event.getMaxPlayers());
                         ByteBuf bytebuf1 = this.getStringBuffer(s1);
 
                         try
