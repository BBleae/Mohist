--- ../src-base/minecraft/net/minecraft/network/ServerStatusResponse.java
+++ ../src-work/minecraft/net/minecraft/network/ServerStatusResponse.java
@@ -1,24 +1,18 @@
 package net.minecraft.network;
 
-import com.google.gson.JsonArray;
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonSerializationContext;
-import com.google.gson.JsonSerializer;
+import com.google.gson.*;
 import com.mojang.authlib.GameProfile;
-import java.lang.reflect.Type;
-import java.util.UUID;
 import net.minecraft.util.JsonUtils;
 import net.minecraft.util.text.ITextComponent;
 
+import java.lang.reflect.Type;
+import java.util.UUID;
+
 public class ServerStatusResponse
 {
     private ITextComponent description;
-    private ServerStatusResponse.Players players;
-    private ServerStatusResponse.Version version;
+    private Players players;
+    private Version version;
     private String favicon;
 
     public ITextComponent getServerDescription()
@@ -32,23 +26,23 @@
         invalidateJson();
     }
 
-    public ServerStatusResponse.Players getPlayers()
+    public Players getPlayers()
     {
         return this.players;
     }
 
-    public void setPlayers(ServerStatusResponse.Players playersIn)
+    public void setPlayers(Players playersIn)
     {
         this.players = playersIn;
         invalidateJson();
     }
 
-    public ServerStatusResponse.Version getVersion()
+    public Version getVersion()
     {
         return this.version;
     }
 
-    public void setVersion(ServerStatusResponse.Version versionIn)
+    public void setVersion(Version versionIn)
     {
         this.version = versionIn;
         invalidateJson();
@@ -86,23 +80,23 @@
             {
                 return this.onlinePlayerCount;
             }
-
+            public GameProfile[] getSample() { return getPlayers(); } // Paper - OBFHELPER
             public GameProfile[] getPlayers()
             {
                 return this.players;
             }
-
+            public void setSample(GameProfile[] sample) { setPlayers(sample); } // Paper - OBFHELPER
             public void setPlayers(GameProfile[] playersIn)
             {
                 this.players = playersIn;
             }
 
-            public static class Serializer implements JsonDeserializer<ServerStatusResponse.Players>, JsonSerializer<ServerStatusResponse.Players>
+            public static class Serializer implements JsonDeserializer<Players>, JsonSerializer<Players>
                 {
-                    public ServerStatusResponse.Players deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
+                    public Players deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
                     {
                         JsonObject jsonobject = JsonUtils.getJsonObject(p_deserialize_1_, "players");
-                        ServerStatusResponse.Players serverstatusresponse$players = new ServerStatusResponse.Players(JsonUtils.getInt(jsonobject, "max"), JsonUtils.getInt(jsonobject, "online"));
+                        Players serverstatusresponse$players = new Players(JsonUtils.getInt(jsonobject, "max"), JsonUtils.getInt(jsonobject, "online"));
 
                         if (JsonUtils.isJsonArray(jsonobject, "sample"))
                         {
@@ -126,7 +120,7 @@
                         return serverstatusresponse$players;
                     }
 
-                    public JsonElement serialize(ServerStatusResponse.Players p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
+                    public JsonElement serialize(Players p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
                     {
                         JsonObject jsonobject = new JsonObject();
                         jsonobject.addProperty("max", Integer.valueOf(p_serialize_1_.getMaxPlayers()));
@@ -167,12 +161,12 @@
 
                 if (jsonobject.has("players"))
                 {
-                    serverstatusresponse.setPlayers((ServerStatusResponse.Players)p_deserialize_3_.deserialize(jsonobject.get("players"), ServerStatusResponse.Players.class));
+                    serverstatusresponse.setPlayers((Players)p_deserialize_3_.deserialize(jsonobject.get("players"), Players.class));
                 }
 
                 if (jsonobject.has("version"))
                 {
-                    serverstatusresponse.setVersion((ServerStatusResponse.Version)p_deserialize_3_.deserialize(jsonobject.get("version"), ServerStatusResponse.Version.class));
+                    serverstatusresponse.setVersion((Version)p_deserialize_3_.deserialize(jsonobject.get("version"), Version.class));
                 }
 
                 if (jsonobject.has("favicon"))
@@ -273,15 +267,15 @@
                 return this.protocol;
             }
 
-            public static class Serializer implements JsonDeserializer<ServerStatusResponse.Version>, JsonSerializer<ServerStatusResponse.Version>
+            public static class Serializer implements JsonDeserializer<Version>, JsonSerializer<Version>
                 {
-                    public ServerStatusResponse.Version deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
+                    public Version deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
                     {
                         JsonObject jsonobject = JsonUtils.getJsonObject(p_deserialize_1_, "version");
-                        return new ServerStatusResponse.Version(JsonUtils.getString(jsonobject, "name"), JsonUtils.getInt(jsonobject, "protocol"));
+                        return new Version(JsonUtils.getString(jsonobject, "name"), JsonUtils.getInt(jsonobject, "protocol"));
                     }
 
-                    public JsonElement serialize(ServerStatusResponse.Version p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
+                    public JsonElement serialize(Version p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
                     {
                         JsonObject jsonobject = new JsonObject();
                         jsonobject.addProperty("name", p_serialize_1_.getName());
