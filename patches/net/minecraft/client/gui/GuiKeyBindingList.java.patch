--- ../src-base/minecraft/net/minecraft/client/gui/GuiKeyBindingList.java
+++ ../src-work/minecraft/net/minecraft/client/gui/GuiKeyBindingList.java
@@ -1,21 +1,21 @@
 package net.minecraft.client.gui;
 
-import java.util.Arrays;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.resources.I18n;
-import net.minecraft.client.settings.GameSettings;
 import net.minecraft.client.settings.KeyBinding;
 import net.minecraft.util.text.TextFormatting;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.commons.lang3.ArrayUtils;
 
+import java.util.Arrays;
+
 @SideOnly(Side.CLIENT)
 public class GuiKeyBindingList extends GuiListExtended
 {
     private final GuiControls controlsScreen;
     private final Minecraft mc;
-    private final GuiListExtended.IGuiListEntry[] listEntries;
+    private final IGuiListEntry[] listEntries;
     private int maxListLabelWidth;
 
     public GuiKeyBindingList(GuiControls controls, Minecraft mcIn)
@@ -24,7 +24,7 @@
         this.controlsScreen = controls;
         this.mc = mcIn;
         KeyBinding[] akeybinding = (KeyBinding[])ArrayUtils.clone(mcIn.gameSettings.keyBindings);
-        this.listEntries = new GuiListExtended.IGuiListEntry[akeybinding.length + KeyBinding.getKeybinds().size()];
+        this.listEntries = new IGuiListEntry[akeybinding.length + KeyBinding.getKeybinds().size()];
         Arrays.sort((Object[])akeybinding);
         int i = 0;
         String s = null;
@@ -36,7 +36,7 @@
             if (!s1.equals(s))
             {
                 s = s1;
-                this.listEntries[i++] = new GuiKeyBindingList.CategoryEntry(s1);
+                this.listEntries[i++] = new CategoryEntry(s1);
             }
 
             int j = mcIn.fontRenderer.getStringWidth(I18n.format(keybinding.getKeyDescription()));
@@ -46,7 +46,7 @@
                 this.maxListLabelWidth = j;
             }
 
-            this.listEntries[i++] = new GuiKeyBindingList.KeyEntry(keybinding);
+            this.listEntries[i++] = new KeyEntry(keybinding);
         }
     }
 
@@ -55,7 +55,7 @@
         return this.listEntries.length;
     }
 
-    public GuiListExtended.IGuiListEntry getListEntry(int index)
+    public IGuiListEntry getListEntry(int index)
     {
         return this.listEntries[index];
     }
@@ -71,7 +71,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public class CategoryEntry implements GuiListExtended.IGuiListEntry
+    public class CategoryEntry implements IGuiListEntry
     {
         private final String labelText;
         private final int labelWidth;
@@ -102,7 +102,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public class KeyEntry implements GuiListExtended.IGuiListEntry
+    public class KeyEntry implements IGuiListEntry
     {
         private final KeyBinding keybinding;
         private final String keyDesc;
