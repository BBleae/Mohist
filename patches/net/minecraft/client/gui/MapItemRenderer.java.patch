--- ../src-base/minecraft/net/minecraft/client/gui/MapItemRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/gui/MapItemRenderer.java
@@ -1,8 +1,6 @@
 package net.minecraft.client.gui;
 
 import com.google.common.collect.Maps;
-import java.util.Map;
-import javax.annotation.Nullable;
 import net.minecraft.block.material.MapColor;
 import net.minecraft.client.renderer.BufferBuilder;
 import net.minecraft.client.renderer.GlStateManager;
@@ -16,12 +14,15 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+import java.util.Map;
+
 @SideOnly(Side.CLIENT)
 public class MapItemRenderer
 {
     private static final ResourceLocation TEXTURE_MAP_ICONS = new ResourceLocation("textures/map/map_icons.png");
     private final TextureManager textureManager;
-    private final Map<String, MapItemRenderer.Instance> loadedMaps = Maps.<String, MapItemRenderer.Instance>newHashMap();
+    private final Map<String, Instance> loadedMaps = Maps.<String, Instance>newHashMap();
 
     public MapItemRenderer(TextureManager textureManagerIn)
     {
@@ -38,13 +39,13 @@
         this.getMapRendererInstance(mapdataIn).render(noOverlayRendering);
     }
 
-    private MapItemRenderer.Instance getMapRendererInstance(MapData mapdataIn)
+    private Instance getMapRendererInstance(MapData mapdataIn)
     {
-        MapItemRenderer.Instance mapitemrenderer$instance = this.loadedMaps.get(mapdataIn.mapName);
+        Instance mapitemrenderer$instance = this.loadedMaps.get(mapdataIn.mapName);
 
         if (mapitemrenderer$instance == null)
         {
-            mapitemrenderer$instance = new MapItemRenderer.Instance(mapdataIn);
+            mapitemrenderer$instance = new Instance(mapdataIn);
             this.loadedMaps.put(mapdataIn.mapName, mapitemrenderer$instance);
         }
 
@@ -59,7 +60,7 @@
 
     public void clearLoadedMaps()
     {
-        for (MapItemRenderer.Instance mapitemrenderer$instance : this.loadedMaps.values())
+        for (Instance mapitemrenderer$instance : this.loadedMaps.values())
         {
             this.textureManager.deleteTexture(mapitemrenderer$instance.location);
         }
