--- ../src-base/minecraft/net/minecraft/tileentity/TileEntitySign.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntitySign.java
@@ -1,6 +1,5 @@
 package net.minecraft.tileentity;
 
-import javax.annotation.Nullable;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.CommandResultStats;
 import net.minecraft.command.ICommandSender;
@@ -20,11 +19,13 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+
 public class TileEntitySign extends TileEntity
 {
     public final ITextComponent[] signText = new ITextComponent[] {new TextComponentString(""), new TextComponentString(""), new TextComponentString(""), new TextComponentString("")};
     public int lineBeingEdited = -1;
-    private boolean isEditable = true;
+    public boolean isEditable = true;
     private EntityPlayer player;
     private final CommandResultStats stats = new CommandResultStats();
 
@@ -38,6 +39,10 @@
             compound.setString("Text" + (i + 1), s);
         }
 
+        if (Boolean.getBoolean("convertLegacySigns")) {
+            compound.setBoolean("Bukkit.isConverted", true);
+        }
+
         this.stats.writeStatsToNBT(compound);
         return compound;
     }
@@ -51,8 +56,7 @@
     {
         this.isEditable = false;
         super.readFromNBT(compound);
-        ICommandSender icommandsender = new ICommandSender()
-        {
+        ICommandSender icommandlistener = new ISignCommandListener() { // Paper
             public String getName()
             {
                 return "Sign";
@@ -79,19 +83,38 @@
             }
         };
 
+        // CraftBukkit start - Add an option to convert signs correctly
+        // This is done with a flag instead of all the time because
+        // we have no way to tell whether a sign is from 1.7.10 or 1.8
+
+        boolean oldSign = Boolean.getBoolean("convertLegacySigns") && !compound.getBoolean("Bukkit.isConverted");
+
         for (int i = 0; i < 4; ++i)
         {
             String s = compound.getString("Text" + (i + 1));
-            ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
+            // ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
+            if (s != null && s.length() > 2048) {
+                s = "\"\"";
+            }
 
             try
             {
-                this.signText[i] = TextComponentUtils.processComponent(icommandsender, itextcomponent, (Entity)null);
+                ITextComponent ichatbasecomponent = ITextComponent.Serializer.jsonToComponent(s);
+
+                if (oldSign) {
+                    signText[i] = org.bukkit.craftbukkit.util.CraftChatMessage.fromString(s)[0];
+                    continue;
+                }
+                // CraftBukkit end
+
+                try {
+                    this.signText[i] = TextComponentUtils.processComponent(icommandlistener, ichatbasecomponent, (Entity) null);
+                } catch (CommandException commandexception) {
+                    this.signText[i] = ichatbasecomponent;
+                }
+            } catch (com.google.gson.JsonParseException jsonparseexception) {
+                this.signText[i] = new TextComponentString(s);
             }
-            catch (CommandException var7)
-            {
-                this.signText[i] = itextcomponent;
-            }
         }
 
         this.stats.readStatsFromNBT(compound);
@@ -141,8 +164,7 @@
 
     public boolean executeCommand(final EntityPlayer playerIn)
     {
-        ICommandSender icommandsender = new ICommandSender()
-        {
+        ICommandSender icommandlistener = new ISignCommandListener() { // Paper
             public String getName()
             {
                 return playerIn.getName();
@@ -201,7 +223,12 @@
 
                 if (clickevent.getAction() == ClickEvent.Action.RUN_COMMAND)
                 {
-                    playerIn.getServer().getCommandManager().executeCommand(icommandsender, clickevent.getValue());
+                    // playerIn.getServer().getCommandManager().executeCommand(icommandsender, clickevent.getValue());
+                    CommandBlockBaseLogic.executeSafely(icommandlistener, new org.bukkit.craftbukkit.command.ProxiedNativeCommandSender(
+                            icommandlistener,
+                            new org.bukkit.craftbukkit.command.CraftBlockCommandSender(icommandlistener),
+                            playerIn.getBukkitEntity()
+                    ), clickevent.getValue());
                 }
             }
         }
@@ -213,4 +240,6 @@
     {
         return this.stats;
     }
+
+    public interface ISignCommandListener extends ICommandSender {} // Paper
 }
