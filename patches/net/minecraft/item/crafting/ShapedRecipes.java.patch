--- ../src-base/minecraft/net/minecraft/item/crafting/ShapedRecipes.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/ShapedRecipes.java
@@ -3,15 +3,7 @@
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonSyntaxException;
-import java.util.Map;
-import java.util.Set;
-import java.util.Map.Entry;
-import javax.annotation.Nullable;
+import com.google.gson.*;
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
@@ -19,7 +11,15 @@
 import net.minecraft.util.NonNullList;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapedRecipe;
+import org.bukkit.inventory.Recipe;
 
+import javax.annotation.Nullable;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
 public class ShapedRecipes extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<IRecipe> implements net.minecraftforge.common.crafting.IShapedRecipe
 {
     public final int recipeWidth;
@@ -28,6 +28,8 @@
     private final ItemStack recipeOutput;
     private final String group;
 
+    public ResourceLocation key;
+
     public ShapedRecipes(String group, int width, int height, NonNullList<Ingredient> ingredients, ItemStack result)
     {
         this.group = group;
@@ -373,6 +375,73 @@
         }
     }
 
+    @Override
+    public Recipe toBukkitRecipe() {
+        if (this.recipeHeight < 1 || this.recipeHeight > 3 || this.recipeWidth < 1 || this.recipeWidth > 3) {
+            return new CustomModRecipe((IRecipe) this, this.getRegistryName());
+        }
+        CraftItemStack result = CraftItemStack.asCraftMirror(this.recipeOutput);
+        CraftShapedRecipe recipe = new CraftShapedRecipe(result, this);
+        switch (this.recipeHeight) {
+            case 1:
+                switch (this.recipeWidth) {
+                    case 1:
+                        recipe.shape("a");
+                        break;
+                    case 2:
+                        recipe.shape("ab");
+                        break;
+                    case 3:
+                        recipe.shape("abc");
+                        break;
+                }
+                break;
+            case 2:
+                switch (this.recipeWidth) {
+                    case 1:
+                        recipe.shape("a","b");
+                        break;
+                    case 2:
+                        recipe.shape("ab","cd");
+                        break;
+                    case 3:
+                        recipe.shape("abc","def");
+                        break;
+                }
+                break;
+            case 3:
+                switch (this.recipeWidth) {
+                    case 1:
+                        recipe.shape("a","b","c");
+                        break;
+                    case 2:
+                        recipe.shape("ab","cd","ef");
+                        break;
+                    case 3:
+                        recipe.shape("abc","def","ghi");
+                        break;
+                }
+                break;
+        }
+        char c = 'a';
+        for (Ingredient list : this.recipeItems) {
+            if (list != null) { // Mohist - get recipe from OreDictionary
+                ItemStack[] matchingStacks = list.getMatchingStacks();
+                if (matchingStacks.length > 0) {
+                    net.minecraft.item.ItemStack stack = matchingStacks[0];
+                    recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), (matchingStacks.length) > 1 ? 32767 : stack.getMetadata());
+                }
+            }
+            c++;
+        }
+        return recipe;
+    }
+
+    @Override
+    public void setKey(ResourceLocation key) {
+        this.key = key;
+    }
+
     //================================================ FORGE START ================================================
     @Override
     public int getRecipeWidth()
