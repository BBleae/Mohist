--- ../src-base/minecraft/net/minecraft/block/BlockRailBase.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRailBase.java
@@ -1,15 +1,12 @@
 package net.minecraft.block;
 
 import com.google.common.collect.Lists;
-import java.util.List;
-import javax.annotation.Nullable;
 import net.minecraft.block.material.EnumPushReaction;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.state.BlockFaceShape;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
-import net.minecraft.init.Blocks;
 import net.minecraft.util.BlockRenderLayer;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.IStringSerializable;
@@ -20,6 +17,9 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+import java.util.List;
+
 public abstract class BlockRailBase extends Block
 {
     protected static final AxisAlignedBB FLAT_AABB = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 0.125D, 1.0D);
@@ -57,7 +57,7 @@
 
     public AxisAlignedBB getBoundingBox(IBlockState state, IBlockAccess source, BlockPos pos)
     {
-        BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = state.getBlock() == this ? getRailDirection(source, pos, state, null) : null;
+        EnumRailDirection blockrailbase$enumraildirection = state.getBlock() == this ? getRailDirection(source, pos, state, null) : null;
         return blockrailbase$enumraildirection != null && blockrailbase$enumraildirection.isAscending() ? ASCENDING_AABB : FLAT_AABB;
     }
 
@@ -93,7 +93,7 @@
     {
         if (!worldIn.isRemote)
         {
-            BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = getRailDirection(worldIn, pos, worldIn.getBlockState(pos), null);
+            EnumRailDirection blockrailbase$enumraildirection = getRailDirection(worldIn, pos, worldIn.getBlockState(pos), null);
             boolean flag = false;
 
             if (!worldIn.getBlockState(pos.down()).isSideSolid(worldIn, pos.down(), EnumFacing.UP))
@@ -101,19 +101,19 @@
                 flag = true;
             }
 
-            if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.ASCENDING_EAST && !worldIn.getBlockState(pos.east()).isSideSolid(worldIn, pos.east(), EnumFacing.UP))
+            if (blockrailbase$enumraildirection == EnumRailDirection.ASCENDING_EAST && !worldIn.getBlockState(pos.east()).isSideSolid(worldIn, pos.east(), EnumFacing.UP))
             {
                 flag = true;
             }
-            else if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.ASCENDING_WEST && !worldIn.getBlockState(pos.west()).isSideSolid(worldIn, pos.west(), EnumFacing.UP))
+            else if (blockrailbase$enumraildirection == EnumRailDirection.ASCENDING_WEST && !worldIn.getBlockState(pos.west()).isSideSolid(worldIn, pos.west(), EnumFacing.UP))
             {
                 flag = true;
             }
-            else if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.ASCENDING_NORTH && !worldIn.getBlockState(pos.north()).isSideSolid(worldIn, pos.north(), EnumFacing.UP))
+            else if (blockrailbase$enumraildirection == EnumRailDirection.ASCENDING_NORTH && !worldIn.getBlockState(pos.north()).isSideSolid(worldIn, pos.north(), EnumFacing.UP))
             {
                 flag = true;
             }
-            else if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.ASCENDING_SOUTH && !worldIn.getBlockState(pos.south()).isSideSolid(worldIn, pos.south(), EnumFacing.UP))
+            else if (blockrailbase$enumraildirection == EnumRailDirection.ASCENDING_SOUTH && !worldIn.getBlockState(pos.south()).isSideSolid(worldIn, pos.south(), EnumFacing.UP))
             {
                 flag = true;
             }
@@ -136,7 +136,7 @@
 
     protected IBlockState updateDir(World worldIn, BlockPos pos, IBlockState state, boolean initialPlacement)
     {
-        return worldIn.isRemote ? state : (new BlockRailBase.Rail(worldIn, pos, state)).place(worldIn.isBlockPowered(pos), initialPlacement).getBlockState();
+        return worldIn.isRemote ? state : (new Rail(worldIn, pos, state)).place(worldIn.isBlockPowered(pos), initialPlacement).getBlockState();
     }
 
     public EnumPushReaction getMobilityFlag(IBlockState state)
@@ -167,7 +167,7 @@
     }
 
     //Forge: Use getRailDirection(IBlockAccess, BlockPos, IBlockState, EntityMinecart) for enhanced ability
-    public abstract IProperty<BlockRailBase.EnumRailDirection> getShapeProperty();
+    public abstract IProperty<EnumRailDirection> getShapeProperty();
 
     /* ======================================== FORGE START =====================================*/
     /**
@@ -274,7 +274,7 @@
         NORTH_WEST(8, "north_west"),
         NORTH_EAST(9, "north_east");
 
-        private static final BlockRailBase.EnumRailDirection[] META_LOOKUP = new BlockRailBase.EnumRailDirection[values().length];
+        private static final EnumRailDirection[] META_LOOKUP = new EnumRailDirection[values().length];
         private final int meta;
         private final String name;
 
@@ -299,7 +299,7 @@
             return this == ASCENDING_NORTH || this == ASCENDING_EAST || this == ASCENDING_SOUTH || this == ASCENDING_WEST;
         }
 
-        public static BlockRailBase.EnumRailDirection byMetadata(int meta)
+        public static EnumRailDirection byMetadata(int meta)
         {
             if (meta < 0 || meta >= META_LOOKUP.length)
             {
@@ -316,7 +316,7 @@
 
         static
         {
-            for (BlockRailBase.EnumRailDirection blockrailbase$enumraildirection : values())
+            for (EnumRailDirection blockrailbase$enumraildirection : values())
             {
                 META_LOOKUP[blockrailbase$enumraildirection.getMetadata()] = blockrailbase$enumraildirection;
             }
@@ -339,7 +339,7 @@
             this.pos = pos;
             this.state = state;
             this.block = (BlockRailBase)state.getBlock();
-            BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = block.getRailDirection(worldIn, pos, state, null);
+            EnumRailDirection blockrailbase$enumraildirection = block.getRailDirection(worldIn, pos, state, null);
             this.isPowered = !this.block.isFlexibleRail(worldIn, pos);
             this.canMakeSlopes = this.block.canMakeSlopes(worldIn, pos);
             this.updateConnectedRails(blockrailbase$enumraildirection);
@@ -350,7 +350,7 @@
             return this.connectedRails;
         }
 
-        private void updateConnectedRails(BlockRailBase.EnumRailDirection railDirection)
+        private void updateConnectedRails(EnumRailDirection railDirection)
         {
             this.connectedRails.clear();
 
@@ -402,7 +402,7 @@
         {
             for (int i = 0; i < this.connectedRails.size(); ++i)
             {
-                BlockRailBase.Rail blockrailbase$rail = this.findRailAt(this.connectedRails.get(i));
+                Rail blockrailbase$rail = this.findRailAt(this.connectedRails.get(i));
 
                 if (blockrailbase$rail != null && blockrailbase$rail.isConnectedToRail(this))
                 {
@@ -447,7 +447,7 @@
             }
         }
 
-        private boolean isConnectedToRail(BlockRailBase.Rail rail)
+        private boolean isConnectedToRail(Rail rail)
         {
             return this.isConnectedTo(rail.pos);
         }
@@ -482,12 +482,12 @@
             return i;
         }
 
-        private boolean canConnectTo(BlockRailBase.Rail rail)
+        private boolean canConnectTo(Rail rail)
         {
             return this.isConnectedToRail(rail) || this.connectedRails.size() != 2;
         }
 
-        private void connectTo(BlockRailBase.Rail rail)
+        private void connectTo(Rail rail)
         {
             this.connectedRails.add(rail.pos);
             BlockPos blockpos = this.pos.north();
@@ -498,70 +498,70 @@
             boolean flag1 = this.isConnectedTo(blockpos1);
             boolean flag2 = this.isConnectedTo(blockpos2);
             boolean flag3 = this.isConnectedTo(blockpos3);
-            BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = null;
+            EnumRailDirection blockrailbase$enumraildirection = null;
 
             if (flag || flag1)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_SOUTH;
+                blockrailbase$enumraildirection = EnumRailDirection.NORTH_SOUTH;
             }
 
             if (flag2 || flag3)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.EAST_WEST;
+                blockrailbase$enumraildirection = EnumRailDirection.EAST_WEST;
             }
 
             if (!this.isPowered)
             {
                 if (flag1 && flag3 && !flag && !flag2)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.SOUTH_EAST;
                 }
 
                 if (flag1 && flag2 && !flag && !flag3)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.SOUTH_WEST;
                 }
 
                 if (flag && flag2 && !flag1 && !flag3)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.NORTH_WEST;
                 }
 
                 if (flag && flag3 && !flag1 && !flag2)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.NORTH_EAST;
                 }
             }
 
-            if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.NORTH_SOUTH && canMakeSlopes)
+            if (blockrailbase$enumraildirection == EnumRailDirection.NORTH_SOUTH && canMakeSlopes)
             {
                 if (BlockRailBase.isRailBlock(this.world, blockpos.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_NORTH;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_NORTH;
                 }
 
                 if (BlockRailBase.isRailBlock(this.world, blockpos1.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_SOUTH;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_SOUTH;
                 }
             }
 
-            if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.EAST_WEST && canMakeSlopes)
+            if (blockrailbase$enumraildirection == EnumRailDirection.EAST_WEST && canMakeSlopes)
             {
                 if (BlockRailBase.isRailBlock(this.world, blockpos3.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_EAST;
                 }
 
                 if (BlockRailBase.isRailBlock(this.world, blockpos2.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_WEST;
                 }
             }
 
             if (blockrailbase$enumraildirection == null)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_SOUTH;
+                blockrailbase$enumraildirection = EnumRailDirection.NORTH_SOUTH;
             }
 
             this.state = this.state.withProperty(this.block.getShapeProperty(), blockrailbase$enumraildirection);
@@ -570,7 +570,7 @@
 
         private boolean hasNeighborRail(BlockPos posIn)
         {
-            BlockRailBase.Rail blockrailbase$rail = this.findRailAt(posIn);
+            Rail blockrailbase$rail = this.findRailAt(posIn);
 
             if (blockrailbase$rail == null)
             {
@@ -583,7 +583,7 @@
             }
         }
 
-        public BlockRailBase.Rail place(boolean powered, boolean initialPlacement)
+        public Rail place(boolean powered, boolean initialPlacement)
         {
             BlockPos blockpos = this.pos.north();
             BlockPos blockpos1 = this.pos.south();
@@ -593,38 +593,38 @@
             boolean flag1 = this.hasNeighborRail(blockpos1);
             boolean flag2 = this.hasNeighborRail(blockpos2);
             boolean flag3 = this.hasNeighborRail(blockpos3);
-            BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = null;
+            EnumRailDirection blockrailbase$enumraildirection = null;
 
             if ((flag || flag1) && !flag2 && !flag3)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_SOUTH;
+                blockrailbase$enumraildirection = EnumRailDirection.NORTH_SOUTH;
             }
 
             if ((flag2 || flag3) && !flag && !flag1)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.EAST_WEST;
+                blockrailbase$enumraildirection = EnumRailDirection.EAST_WEST;
             }
 
             if (!this.isPowered)
             {
                 if (flag1 && flag3 && !flag && !flag2)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.SOUTH_EAST;
                 }
 
                 if (flag1 && flag2 && !flag && !flag3)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.SOUTH_WEST;
                 }
 
                 if (flag && flag2 && !flag1 && !flag3)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.NORTH_WEST;
                 }
 
                 if (flag && flag3 && !flag1 && !flag2)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.NORTH_EAST;
                 }
             }
 
@@ -632,12 +632,12 @@
             {
                 if (flag || flag1)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_SOUTH;
+                    blockrailbase$enumraildirection = EnumRailDirection.NORTH_SOUTH;
                 }
 
                 if (flag2 || flag3)
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.EAST_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.EAST_WEST;
                 }
 
                 if (!this.isPowered)
@@ -646,78 +646,78 @@
                     {
                         if (flag1 && flag3)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_EAST;
+                            blockrailbase$enumraildirection = EnumRailDirection.SOUTH_EAST;
                         }
 
                         if (flag2 && flag1)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_WEST;
+                            blockrailbase$enumraildirection = EnumRailDirection.SOUTH_WEST;
                         }
 
                         if (flag3 && flag)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_EAST;
+                            blockrailbase$enumraildirection = EnumRailDirection.NORTH_EAST;
                         }
 
                         if (flag && flag2)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_WEST;
+                            blockrailbase$enumraildirection = EnumRailDirection.NORTH_WEST;
                         }
                     }
                     else
                     {
                         if (flag && flag2)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_WEST;
+                            blockrailbase$enumraildirection = EnumRailDirection.NORTH_WEST;
                         }
 
                         if (flag3 && flag)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_EAST;
+                            blockrailbase$enumraildirection = EnumRailDirection.NORTH_EAST;
                         }
 
                         if (flag2 && flag1)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_WEST;
+                            blockrailbase$enumraildirection = EnumRailDirection.SOUTH_WEST;
                         }
 
                         if (flag1 && flag3)
                         {
-                            blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.SOUTH_EAST;
+                            blockrailbase$enumraildirection = EnumRailDirection.SOUTH_EAST;
                         }
                     }
                 }
             }
 
-            if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.NORTH_SOUTH && canMakeSlopes)
+            if (blockrailbase$enumraildirection == EnumRailDirection.NORTH_SOUTH && canMakeSlopes)
             {
                 if (BlockRailBase.isRailBlock(this.world, blockpos.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_NORTH;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_NORTH;
                 }
 
                 if (BlockRailBase.isRailBlock(this.world, blockpos1.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_SOUTH;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_SOUTH;
                 }
             }
 
-            if (blockrailbase$enumraildirection == BlockRailBase.EnumRailDirection.EAST_WEST && canMakeSlopes)
+            if (blockrailbase$enumraildirection == EnumRailDirection.EAST_WEST && canMakeSlopes)
             {
                 if (BlockRailBase.isRailBlock(this.world, blockpos3.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_EAST;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_EAST;
                 }
 
                 if (BlockRailBase.isRailBlock(this.world, blockpos2.up()))
                 {
-                    blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.ASCENDING_WEST;
+                    blockrailbase$enumraildirection = EnumRailDirection.ASCENDING_WEST;
                 }
             }
 
             if (blockrailbase$enumraildirection == null)
             {
-                blockrailbase$enumraildirection = BlockRailBase.EnumRailDirection.NORTH_SOUTH;
+                blockrailbase$enumraildirection = EnumRailDirection.NORTH_SOUTH;
             }
 
             this.updateConnectedRails(blockrailbase$enumraildirection);
@@ -729,7 +729,7 @@
 
                 for (int i = 0; i < this.connectedRails.size(); ++i)
                 {
-                    BlockRailBase.Rail blockrailbase$rail = this.findRailAt(this.connectedRails.get(i));
+                    Rail blockrailbase$rail = this.findRailAt(this.connectedRails.get(i));
 
                     if (blockrailbase$rail != null)
                     {
