--- ../src-base/minecraft/net/minecraft/block/BlockGrass.java
+++ ../src-work/minecraft/net/minecraft/block/BlockGrass.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.Random;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
@@ -9,13 +8,21 @@
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.init.Blocks;
 import net.minecraft.item.Item;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockRenderLayer;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
+import org.bukkit.event.block.BlockFadeEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
 
+import java.util.Random;
+
 public class BlockGrass extends Block implements IGrowable
 {
     public static final PropertyBool SNOWY = PropertyBool.create("snowy");
@@ -36,32 +43,56 @@
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
+        if (worldIn.paperConfig.grassUpdateRate != 1 && (worldIn.paperConfig.grassUpdateRate < 1 || (MinecraftServer.currentTick + pos.hashCode()) % worldIn.paperConfig.grassUpdateRate != 0)) { return; } // Paper
         if (!worldIn.isRemote)
         {
             if (!worldIn.isAreaLoaded(pos, 3)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light and spreading
-            if (worldIn.getLightFromNeighbors(pos.up()) < 4 && worldIn.getBlockState(pos.up()).getLightOpacity(worldIn, pos.up()) > 2)
-            {
-                worldIn.setBlockState(pos, Blocks.DIRT.getDefaultState());
+                int lightLevel = -1; // Paper
+                if (worldIn.getBlockState(pos.up()).getLightOpacity() > 2 && (lightLevel = worldIn.getLightFromNeighbors(pos.up())) < 4) { // Paper - move light check to end to avoid unneeded light lookups
+                    org.bukkit.World bworld = worldIn.getWorld();
+                    BlockState blockState = bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()).getState();
+                    blockState.setType(CraftMagicNumbers.getMaterial(Blocks.DIRT));
+
+                    BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+                    worldIn.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    blockState.update(true);
+                }
             }
             else
             {
-                if (worldIn.getLightFromNeighbors(pos.up()) >= 9)
-                {
+                // Paper start
+                // If light was calculated above, reuse it, else grab it
+                if (lightLevel == -1) {
+                    lightLevel = worldIn.getLightFromNeighbors(pos.up());
+                }
+                if (lightLevel >= 9) {
+                    // Paper end
                     for (int i = 0; i < 4; ++i)
                     {
                         BlockPos blockpos = pos.add(rand.nextInt(3) - 1, rand.nextInt(5) - 3, rand.nextInt(3) - 1);
 
                         if (blockpos.getY() >= 0 && blockpos.getY() < 256 && !worldIn.isBlockLoaded(blockpos))
-                        {
+						{
                             return;
                         }
 
                         IBlockState iblockstate = worldIn.getBlockState(blockpos.up());
                         IBlockState iblockstate1 = worldIn.getBlockState(blockpos);
 
-                        if (iblockstate1.getBlock() == Blocks.DIRT && iblockstate1.getValue(BlockDirt.VARIANT) == BlockDirt.DirtType.DIRT && worldIn.getLightFromNeighbors(blockpos.up()) >= 4 && iblockstate.getLightOpacity(worldIn, pos.up()) <= 2)
-                        {
-                            worldIn.setBlockState(blockpos, Blocks.GRASS.getDefaultState());
+                        if (iblockstate1.getBlock() == Blocks.DIRT && iblockstate1.getValue(BlockDirt.VARIANT) == BlockDirt.DirtType.DIRT && worldIn.getLightFromNeighbors(blockpos.up()) >= 4 && iblockstate.getLightOpacity(worldIn, pos.up()) <= 2) {
+                            //worldIn.setBlockState(blockpos, Blocks.GRASS.getDefaultState());
+                            org.bukkit.World bworld = worldIn.getWorld();
+                            BlockState blockState = bworld.getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ()).getState();
+                            blockState.setType(CraftMagicNumbers.getMaterial(Blocks.GRASS));
+
+                            BlockSpreadEvent event = new BlockSpreadEvent(blockState.getBlock(), bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()), blockState);
+                            worldIn.getServer().getPluginManager().callEvent(event);
+
+                            if (!event.isCancelled()) {
+                                blockState.update(true);
+                            }
                         }
                     }
                 }
@@ -109,7 +140,8 @@
 
                             if (Blocks.TALLGRASS.canBlockStay(worldIn, blockpos1, iblockstate1))
                             {
-                                worldIn.setBlockState(blockpos1, iblockstate1, 3);
+//                                worldIn.setBlockState(blockpos1, iblockstate1, 3);
+                                CraftEventFactory.handleBlockGrowEvent(worldIn, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), iblockstate1.getBlock(), iblockstate1.getBlock().getMetaFromState(iblockstate1));
                             }
                         }
                     }
