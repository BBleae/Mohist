--- ../src-base/minecraft/net/minecraft/block/BlockRedstoneRepeater.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRedstoneRepeater.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.Random;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
 import net.minecraft.block.properties.PropertyInteger;
@@ -11,11 +10,7 @@
 import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
-import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumHand;
-import net.minecraft.util.EnumParticleTypes;
-import net.minecraft.util.Mirror;
-import net.minecraft.util.Rotation;
+import net.minecraft.util.*;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.text.translation.I18n;
 import net.minecraft.world.IBlockAccess;
@@ -23,6 +18,8 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Random;
+
 public class BlockRedstoneRepeater extends BlockRedstoneDiode
 {
     public static final PropertyBool LOCKED = PropertyBool.create("locked");
@@ -46,12 +43,12 @@
 
     public IBlockState withRotation(IBlockState state, Rotation rot)
     {
-        return state.withProperty(FACING, rot.rotate((EnumFacing)state.getValue(FACING)));
+        return state.withProperty(FACING, rot.rotate(state.getValue(FACING)));
     }
 
     public IBlockState withMirror(IBlockState state, Mirror mirrorIn)
     {
-        return state.withRotation(mirrorIn.toRotation((EnumFacing)state.getValue(FACING)));
+        return state.withRotation(mirrorIn.toRotation(state.getValue(FACING)));
     }
 
     public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
@@ -69,22 +66,22 @@
 
     protected int getDelay(IBlockState state)
     {
-        return ((Integer)state.getValue(DELAY)).intValue() * 2;
+        return state.getValue(DELAY).intValue() * 2;
     }
 
     protected IBlockState getPoweredState(IBlockState unpoweredState)
     {
-        Integer integer = (Integer)unpoweredState.getValue(DELAY);
-        Boolean obool = (Boolean)unpoweredState.getValue(LOCKED);
-        EnumFacing enumfacing = (EnumFacing)unpoweredState.getValue(FACING);
+        Integer integer = unpoweredState.getValue(DELAY);
+        Boolean obool = unpoweredState.getValue(LOCKED);
+        EnumFacing enumfacing = unpoweredState.getValue(FACING);
         return Blocks.POWERED_REPEATER.getDefaultState().withProperty(FACING, enumfacing).withProperty(DELAY, integer).withProperty(LOCKED, obool);
     }
 
     protected IBlockState getUnpoweredState(IBlockState poweredState)
     {
-        Integer integer = (Integer)poweredState.getValue(DELAY);
-        Boolean obool = (Boolean)poweredState.getValue(LOCKED);
-        EnumFacing enumfacing = (EnumFacing)poweredState.getValue(FACING);
+        Integer integer = poweredState.getValue(DELAY);
+        Boolean obool = poweredState.getValue(LOCKED);
+        EnumFacing enumfacing = poweredState.getValue(FACING);
         return Blocks.UNPOWERED_REPEATER.getDefaultState().withProperty(FACING, enumfacing).withProperty(DELAY, integer).withProperty(LOCKED, obool);
     }
 
@@ -113,7 +110,7 @@
     {
         if (this.isRepeaterPowered)
         {
-            EnumFacing enumfacing = (EnumFacing)stateIn.getValue(FACING);
+            EnumFacing enumfacing = stateIn.getValue(FACING);
             double d0 = (double)((float)pos.getX() + 0.5F) + (double)(rand.nextFloat() - 0.5F) * 0.2D;
             double d1 = (double)((float)pos.getY() + 0.4F) + (double)(rand.nextFloat() - 0.5F) * 0.2D;
             double d2 = (double)((float)pos.getZ() + 0.5F) + (double)(rand.nextFloat() - 0.5F) * 0.2D;
@@ -121,7 +118,7 @@
 
             if (rand.nextBoolean())
             {
-                f = (float)(((Integer)stateIn.getValue(DELAY)).intValue() * 2 - 1);
+                f = (float)(stateIn.getValue(DELAY).intValue() * 2 - 1);
             }
 
             f = f / 16.0F;
@@ -145,8 +142,8 @@
     public int getMetaFromState(IBlockState state)
     {
         int i = 0;
-        i = i | ((EnumFacing)state.getValue(FACING)).getHorizontalIndex();
-        i = i | ((Integer)state.getValue(DELAY)).intValue() - 1 << 2;
+        i = i | state.getValue(FACING).getHorizontalIndex();
+        i = i | state.getValue(DELAY).intValue() - 1 << 2;
         return i;
     }
 
