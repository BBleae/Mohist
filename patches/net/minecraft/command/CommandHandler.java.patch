--- ../src-base/minecraft/net/minecraft/command/CommandHandler.java
+++ ../src-work/minecraft/net/minecraft/command/CommandHandler.java
@@ -1,14 +1,10 @@
 package net.minecraft.command;
 
+import cn.pfcraft.command.BukkitCommandWrapper;
+import cn.pfcraft.command.ModCustomCommand;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.Map.Entry;
-import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.math.BlockPos;
@@ -16,7 +12,15 @@
 import net.minecraft.util.text.TextFormatting;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.command.CraftSimpleCommandMap;
 
+import javax.annotation.Nullable;
+import java.util.Collections;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
 public abstract class CommandHandler implements ICommandManager
 {
     private static final Logger LOGGER = LogManager.getLogger();
@@ -27,15 +31,11 @@
     {
         rawCommand = rawCommand.trim();
 
-        if (rawCommand.startsWith("/"))
-        {
-            rawCommand = rawCommand.substring(1);
-        }
-
         String[] astring = rawCommand.split(" ");
         String s = astring[0];
         astring = dropFirstString(astring);
         ICommand icommand = this.commandMap.get(s);
+        if (icommand == null) icommand = BukkitCommandWrapper.toNMSCommand(sender, s); // Mohist - allow mods execute plugin command
         int i = 0;
 
         try
@@ -144,21 +144,25 @@
 
     protected abstract MinecraftServer getServer();
 
-    public ICommand registerCommand(ICommand command)
-    {
+    public ICommand registerCommand(ICommand command) {
         this.commandMap.put(command.getName(), command);
         this.commandSet.add(command);
 
-        for (String s : command.getAliases())
-        {
-            ICommand icommand = this.commandMap.get(s);
+        CraftSimpleCommandMap commandMap = MinecraftServer.getServerInst().server.getCraftCommandMap();
+        ModCustomCommand customCommand = new ModCustomCommand(command);
 
-            if (icommand == null || !icommand.getName().equals(s))
-            {
-                this.commandMap.put(s, command);
+        List<String> list = command.getAliases();
+        if (list != null) customCommand.setAliases(list);
+        commandMap.register(command.getName(), customCommand);
+
+        if (list != null) {
+            for (String s : list) {
+                ICommand icommand = (ICommand)this.commandMap.get(s);
+                if (icommand == null || !icommand.getName().equals(s)) {
+                    this.commandMap.put(s, command);
+                }
             }
         }
-
         return command;
     }
 
