--- ../src-base/minecraft/net/minecraft/pathfinding/PathNavigate.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathNavigate.java
@@ -1,6 +1,7 @@
 package net.minecraft.pathfinding;
 
-import javax.annotation.Nullable;
+import com.destroystokyo.paper.MCUtil;
+import com.destroystokyo.paper.event.entity.EntityPathfindEvent;
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
@@ -8,6 +9,7 @@
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.init.Blocks;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
@@ -15,6 +17,8 @@
 import net.minecraft.world.ChunkCache;
 import net.minecraft.world.World;
 
+import javax.annotation.Nullable;
+
 public abstract class PathNavigate
 {
     protected EntityLiving entity;
@@ -22,11 +26,11 @@
     @Nullable
     protected Path currentPath;
     protected double speed;
-    private final IAttributeInstance pathSearchRange;
+    public final IAttributeInstance pathSearchRange;
     protected int totalTicks;
     private int ticksAtLastPos;
-    private Vec3d lastPosCheck = Vec3d.ZERO;
-    private Vec3d timeoutCachedNode = Vec3d.ZERO;
+    public Vec3d lastPosCheck = Vec3d.ZERO;
+    public Vec3d timeoutCachedNode = Vec3d.ZERO;
     private long timeoutTimer;
     private long lastTimeoutCheck;
     private double timeoutLimit;
@@ -99,6 +103,9 @@
         }
         else
         {
+            if (!new EntityPathfindEvent(this.entity.getBukkitEntity(), MCUtil.toLocation(this.entity.world, pos), null).callEvent()) {
+                return null;
+            }
             this.targetPos = pos;
             float f = this.getPathSearchRange();
             this.world.profiler.startSection("pathfind");
@@ -121,13 +128,16 @@
         else
         {
             BlockPos blockpos = new BlockPos(entityIn);
-
+			
             if (this.currentPath != null && !this.currentPath.isFinished() && blockpos.equals(this.targetPos))
             {
                 return this.currentPath;
             }
             else
             {
+                if (!new EntityPathfindEvent(this.entity.getBukkitEntity(), MCUtil.toLocation(entity.world, blockpos), entity.getBukkitEntity()).callEvent()) {
+                    return null;
+                }
                 this.targetPos = blockpos;
                 float f = this.getPathSearchRange();
                 this.world.profiler.startSection("pathfind");
@@ -149,7 +159,7 @@
     public boolean tryMoveToEntityLiving(Entity entityIn, double speedIn)
     {
         Path path = this.getPathToEntityLiving(entityIn);
-        return path != null && this.setPath(path, speedIn);
+		return path != null && this.setPath(path, speedIn);
     }
 
     public boolean setPath(@Nullable Path pathentityIn, double speedIn)
