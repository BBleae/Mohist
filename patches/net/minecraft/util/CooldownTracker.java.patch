--- ../src-base/minecraft/net/minecraft/util/CooldownTracker.java
+++ ../src-work/minecraft/net/minecraft/util/CooldownTracker.java
@@ -1,18 +1,19 @@
 package net.minecraft.util;
 
 import com.google.common.collect.Maps;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Map.Entry;
 import net.minecraft.item.Item;
 import net.minecraft.util.math.MathHelper;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+
 public class CooldownTracker
 {
-    private final Map<Item, CooldownTracker.Cooldown> cooldowns = Maps.<Item, CooldownTracker.Cooldown>newHashMap();
-    private int ticks;
+    public final Map<Item, Cooldown> cooldowns = Maps.<Item, Cooldown>newHashMap();
+    public int ticks;
 
     public boolean hasCooldown(Item itemIn)
     {
@@ -21,7 +22,7 @@
 
     public float getCooldown(Item itemIn, float partialTicks)
     {
-        CooldownTracker.Cooldown cooldowntracker$cooldown = this.cooldowns.get(itemIn);
+        Cooldown cooldowntracker$cooldown = this.cooldowns.get(itemIn);
 
         if (cooldowntracker$cooldown != null)
         {
@@ -41,11 +42,11 @@
 
         if (!this.cooldowns.isEmpty())
         {
-            Iterator<Entry<Item, CooldownTracker.Cooldown>> iterator = this.cooldowns.entrySet().iterator();
+            Iterator<Entry<Item, Cooldown>> iterator = this.cooldowns.entrySet().iterator();
 
             while (iterator.hasNext())
             {
-                Entry<Item, CooldownTracker.Cooldown> entry = (Entry)iterator.next();
+                Entry<Item, Cooldown> entry = (Entry)iterator.next();
 
                 if ((entry.getValue()).expireTicks <= this.ticks)
                 {
@@ -58,7 +59,7 @@
 
     public void setCooldown(Item itemIn, int ticksIn)
     {
-        this.cooldowns.put(itemIn, new CooldownTracker.Cooldown(this.ticks, this.ticks + ticksIn));
+        this.cooldowns.put(itemIn, new Cooldown(this.ticks, this.ticks + ticksIn));
         this.notifyOnSet(itemIn, ticksIn);
     }
 
@@ -77,10 +78,10 @@
     {
     }
 
-    class Cooldown
+    public class Cooldown
     {
-        final int createTicks;
-        final int expireTicks;
+        public final int createTicks;
+        public final int expireTicks;
 
         private Cooldown(int createTicksIn, int expireTicksIn)
         {
