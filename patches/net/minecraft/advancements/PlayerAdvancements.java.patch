--- ../src-base/minecraft/net/minecraft/advancements/PlayerAdvancements.java
+++ ../src-work/minecraft/net/minecraft/advancements/PlayerAdvancements.java
@@ -8,18 +8,6 @@
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonParseException;
 import com.google.gson.reflect.TypeToken;
-import java.io.File;
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.util.Comparator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.Map.Entry;
-import java.util.function.Function;
-import java.util.stream.Collectors;
-import java.util.stream.Stream;
-import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.play.server.SPacketAdvancementInfo;
 import net.minecraft.network.play.server.SPacketSelectAdvancementsTab;
@@ -30,16 +18,28 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import javax.annotation.Nullable;
+import java.io.File;
+import java.io.IOException;
+import java.nio.charset.StandardCharsets;
+import java.util.Comparator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
 public class PlayerAdvancements
 {
     private static final Logger LOGGER = LogManager.getLogger();
     private static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(AdvancementProgress.class, new AdvancementProgress.Serializer()).registerTypeAdapter(ResourceLocation.class, new ResourceLocation.Serializer()).setPrettyPrinting().create();
-    private static final TypeToken<Map<ResourceLocation, AdvancementProgress>> MAP_TOKEN = new TypeToken<Map<ResourceLocation, AdvancementProgress>>()
+    private static final TypeToken<Map<ResourceLocation, AdvancementProgress>> MAP_TOKEN = new TypeToken<Map<ResourceLocation, AdvancementProgress>>() // CraftBukkit - decompile error
     {
     };
     private final MinecraftServer server;
     private final File progressFile;
-    private final Map<Advancement, AdvancementProgress> progress = Maps.<Advancement, AdvancementProgress>newLinkedHashMap();
+    public final Map<Advancement, AdvancementProgress> progress = Maps.<Advancement, AdvancementProgress>newLinkedHashMap();
     private final Set<Advancement> visible = Sets.<Advancement>newLinkedHashSet();
     private final Set<Advancement> visibilityChanged = Sets.<Advancement>newLinkedHashSet();
     private final Set<Advancement> progressChanged = Sets.<Advancement>newLinkedHashSet();
@@ -93,7 +93,7 @@
     {
         List<Advancement> list = Lists.<Advancement>newArrayList();
 
-        for (Entry<Advancement, AdvancementProgress> entry : this.progress.entrySet())
+        for (Entry<Advancement, AdvancementProgress> entry : this.progress.entrySet()) // CraftBukkit - decompile error
         {
             if (((AdvancementProgress)entry.getValue()).isDone())
             {
@@ -127,7 +127,7 @@
             try
             {
                 String s = Files.toString(this.progressFile, StandardCharsets.UTF_8);
-                Map<ResourceLocation, AdvancementProgress> map = (Map)JsonUtils.gsonDeserialize(GSON, s, MAP_TOKEN.getType());
+                Map<ResourceLocation, AdvancementProgress> map = (Map)JsonUtils.gsonDeserialize(GSON, s, MAP_TOKEN.getType()); // CraftBukkit
 
                 if (map == null)
                 {
@@ -142,7 +142,11 @@
 
                     if (advancement == null)
                     {
-                        LOGGER.warn("Ignored advancement '" + entry.getKey() + "' in progress file " + this.progressFile + " - it doesn't exist anymore?");
+                        // CraftBukkit start
+                        if (entry.getKey().toString().equals("minecraft")) {
+                            LOGGER.warn("Ignored advancement '" + entry.getKey() + "' in progress file " + this.progressFile + " - it doesn't exist anymore?");
+                        }
+                        // CraftBukkit end
                     }
                     else
                     {
@@ -190,7 +194,7 @@
         }
         catch (IOException ioexception)
         {
-            LOGGER.error("Couldn't save player advancements to " + this.progressFile, (Throwable)ioexception);
+            LOGGER.error("Couldn't save player advancements to " + this.progressFile, ioexception);
         }
     }
 
@@ -205,12 +209,19 @@
 
         if (advancementprogress.grantCriterion(p_192750_2_))
         {
+            // Paper start
+            if (!new com.destroystokyo.paper.event.player.PlayerAdvancementCriterionGrantEvent(this.player.getBukkitEntity(), p_192750_1_.bukkit, p_192750_2_).callEvent()) {
+                advancementprogress.getCriterionProgress(p_192750_2_);
+                return false;
+            }
+            // Paper end
             this.unregisterListeners(p_192750_1_);
             this.progressChanged.add(p_192750_1_);
             flag = true;
 
             if (!flag1 && advancementprogress.isDone())
             {
+                this.player.world.getServer().getPluginManager().callEvent(new org.bukkit.event.player.PlayerAdvancementDoneEvent(this.player.getBukkitEntity(), p_192750_1_.bukkit)); // CraftBukkit
                 p_192750_1_.getRewards().apply(this.player);
 
                 if (p_192750_1_.getDisplay() != null && p_192750_1_.getDisplay().shouldAnnounceToChat() && this.player.world.getGameRules().getBoolean("announceAdvancements"))
