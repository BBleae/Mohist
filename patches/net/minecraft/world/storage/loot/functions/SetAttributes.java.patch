--- ../src-base/minecraft/net/minecraft/world/storage/loot/functions/SetAttributes.java
+++ ../src-work/minecraft/net/minecraft/world/storage/loot/functions/SetAttributes.java
@@ -1,15 +1,6 @@
 package net.minecraft.world.storage.loot.functions;
 
-import com.google.gson.JsonArray;
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
-import com.google.gson.JsonSerializationContext;
-import com.google.gson.JsonSyntaxException;
-import java.util.Random;
-import java.util.UUID;
-import javax.annotation.Nullable;
+import com.google.gson.*;
 import net.minecraft.entity.ai.attributes.AttributeModifier;
 import net.minecraft.inventory.EntityEquipmentSlot;
 import net.minecraft.item.ItemStack;
@@ -21,12 +12,16 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import javax.annotation.Nullable;
+import java.util.Random;
+import java.util.UUID;
+
 public class SetAttributes extends LootFunction
 {
     private static final Logger LOGGER = LogManager.getLogger();
-    private final SetAttributes.Modifier[] modifiers;
+    private final Modifier[] modifiers;
 
-    public SetAttributes(LootCondition[] conditionsIn, SetAttributes.Modifier[] modifiersIn)
+    public SetAttributes(LootCondition[] conditionsIn, Modifier[] modifiersIn)
     {
         super(conditionsIn);
         this.modifiers = modifiersIn;
@@ -34,7 +29,7 @@
 
     public ItemStack apply(ItemStack stack, Random rand, LootContext context)
     {
-        for (SetAttributes.Modifier setattributes$modifier : this.modifiers)
+        for (Modifier setattributes$modifier : this.modifiers)
         {
             UUID uuid = setattributes$modifier.uuid;
 
@@ -102,7 +97,7 @@
                 return jsonobject;
             }
 
-            public static SetAttributes.Modifier deserialize(JsonObject jsonObj, JsonDeserializationContext context)
+            public static Modifier deserialize(JsonObject jsonObj, JsonDeserializationContext context)
             {
                 String s = JsonUtils.getString(jsonObj, "name");
                 String s1 = JsonUtils.getString(jsonObj, "attribute");
@@ -151,7 +146,7 @@
                     }
                 }
 
-                return new SetAttributes.Modifier(s, s1, i, randomvaluerange, aentityequipmentslot, uuid);
+                return new Modifier(s, s1, i, randomvaluerange, aentityequipmentslot, uuid);
             }
 
             private static String getOperationFromStr(int operationIn)
@@ -201,7 +196,7 @@
             {
                 JsonArray jsonarray = new JsonArray();
 
-                for (SetAttributes.Modifier setattributes$modifier : functionClazz.modifiers)
+                for (Modifier setattributes$modifier : functionClazz.modifiers)
                 {
                     jsonarray.add(setattributes$modifier.serialize(serializationContext));
                 }
@@ -212,12 +207,12 @@
             public SetAttributes deserialize(JsonObject object, JsonDeserializationContext deserializationContext, LootCondition[] conditionsIn)
             {
                 JsonArray jsonarray = JsonUtils.getJsonArray(object, "modifiers");
-                SetAttributes.Modifier[] asetattributes$modifier = new SetAttributes.Modifier[jsonarray.size()];
+                Modifier[] asetattributes$modifier = new Modifier[jsonarray.size()];
                 int i = 0;
 
                 for (JsonElement jsonelement : jsonarray)
                 {
-                    asetattributes$modifier[i++] = SetAttributes.Modifier.deserialize(JsonUtils.getJsonObject(jsonelement, "modifier"), deserializationContext);
+                    asetattributes$modifier[i++] = Modifier.deserialize(JsonUtils.getJsonObject(jsonelement, "modifier"), deserializationContext);
                 }
 
                 if (asetattributes$modifier.length == 0)
