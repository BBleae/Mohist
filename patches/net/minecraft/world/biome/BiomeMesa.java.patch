--- ../src-base/minecraft/net/minecraft/world/biome/BiomeMesa.java
+++ ../src-work/minecraft/net/minecraft/world/biome/BiomeMesa.java
@@ -1,7 +1,5 @@
 package net.minecraft.world.biome;
 
-import java.util.Arrays;
-import java.util.Random;
 import net.minecraft.block.BlockColored;
 import net.minecraft.block.BlockDirt;
 import net.minecraft.block.BlockSand;
@@ -17,6 +15,9 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Arrays;
+import java.util.Random;
+
 public class BiomeMesa extends Biome
 {
     protected static final IBlockState COARSE_DIRT = Blocks.DIRT.getDefaultState().withProperty(BlockDirt.VARIANT, BlockDirt.DirtType.COARSE_DIRT);
@@ -33,7 +34,7 @@
     private final boolean brycePillars;
     private final boolean hasForest;
 
-    public BiomeMesa(boolean p_i46704_1_, boolean p_i46704_2_, Biome.BiomeProperties properties)
+    public BiomeMesa(boolean p_i46704_1_, boolean p_i46704_2_, BiomeProperties properties)
     {
         super(properties);
         this.brycePillars = p_i46704_1_;
@@ -56,7 +57,7 @@
 
     public BiomeDecorator createBiomeDecorator()
     {
-        return new BiomeMesa.Decorator();
+        return new Decorator();
     }
 
     public WorldGenAbstractTree getRandomTreeFeature(Random rand)
@@ -121,8 +122,7 @@
                 chunkPrimerIn.setBlockState(l1, j1, k1, STONE);
             }
 
-            if (j1 <= rand.nextInt(5))
-            {
+            if (j1 <= (worldIn.paperConfig.generateFlatBedrock ? 0 : rand.nextInt(5))) { // Paper - Configurable flat bedrock
                 chunkPrimerIn.setBlockState(l1, j1, k1, BEDROCK);
             }
             else if (i1 < 15 || this.brycePillars)
@@ -336,6 +336,7 @@
         protected void generateOres(World worldIn, Random random)
         {
             super.generateOres(worldIn, random);
+            if (worldIn.paperConfig.disableMesaAdditionalGold) return; // Paper
             if (net.minecraftforge.event.terraingen.TerrainGen.generateOre(worldIn, random, goldGen, chunkPos, net.minecraftforge.event.terraingen.OreGenEvent.GenerateMinable.EventType.GOLD))
             this.genStandardOre1(worldIn, random, 20, this.goldGen, 32, 80);
         }
