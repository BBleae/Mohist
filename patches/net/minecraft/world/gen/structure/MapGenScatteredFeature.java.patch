--- ../src-base/minecraft/net/minecraft/world/gen/structure/MapGenScatteredFeature.java
+++ ../src-work/minecraft/net/minecraft/world/gen/structure/MapGenScatteredFeature.java
@@ -1,11 +1,6 @@
 package net.minecraft.world.gen.structure;
 
 import com.google.common.collect.Lists;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.Map.Entry;
 import net.minecraft.entity.monster.EntityWitch;
 import net.minecraft.init.Biomes;
 import net.minecraft.util.math.BlockPos;
@@ -13,6 +8,12 @@
 import net.minecraft.world.World;
 import net.minecraft.world.biome.Biome;
 
+import java.util.Arrays;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Random;
+
 public class MapGenScatteredFeature extends MapGenStructure
 {
     private static final List<Biome> BIOMELIST = Arrays.<Biome>asList(Biomes.DESERT, Biomes.DESERT_HILLS, Biomes.JUNGLE, Biomes.JUNGLE_HILLS, Biomes.SWAMPLAND, Biomes.ICE_PLAINS, Biomes.COLD_TAIGA);
@@ -63,7 +64,7 @@
 
         int k = chunkX / this.maxDistanceBetweenScatteredFeatures;
         int l = chunkZ / this.maxDistanceBetweenScatteredFeatures;
-        Random random = this.world.setRandomSeed(k, l, 14357617);
+        Random random = this.world.setRandomSeed(k, l, this.world.spigotConfig.largeFeatureSeed); // Spigot
         k = k * this.maxDistanceBetweenScatteredFeatures;
         l = l * this.maxDistanceBetweenScatteredFeatures;
         k = k + random.nextInt(this.maxDistanceBetweenScatteredFeatures - 8);
@@ -98,14 +99,14 @@
 
     protected StructureStart getStructureStart(int chunkX, int chunkZ)
     {
-        return new MapGenScatteredFeature.Start(this.world, this.rand, chunkX, chunkZ);
+        return new Start(this.world, this.rand, chunkX, chunkZ);
     }
 
     public boolean isSwampHut(BlockPos pos)
     {
         StructureStart structurestart = this.getStructureAt(pos);
 
-        if (structurestart != null && structurestart instanceof MapGenScatteredFeature.Start && !structurestart.components.isEmpty())
+        if (structurestart != null && structurestart instanceof Start && !structurestart.components.isEmpty())
         {
             StructureComponent structurecomponent = structurestart.components.get(0);
             return structurecomponent instanceof ComponentScatteredFeaturePieces.SwampHut;
