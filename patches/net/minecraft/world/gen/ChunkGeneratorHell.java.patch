--- ../src-base/minecraft/net/minecraft/world/gen/ChunkGeneratorHell.java
+++ ../src-work/minecraft/net/minecraft/world/gen/ChunkGeneratorHell.java
@@ -1,8 +1,5 @@
 package net.minecraft.world.gen;
 
-import java.util.List;
-import java.util.Random;
-import javax.annotation.Nullable;
 import net.minecraft.block.BlockFalling;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -16,15 +13,13 @@
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.chunk.Chunk;
 import net.minecraft.world.chunk.ChunkPrimer;
-import net.minecraft.world.gen.feature.WorldGenBush;
-import net.minecraft.world.gen.feature.WorldGenFire;
-import net.minecraft.world.gen.feature.WorldGenGlowStone1;
-import net.minecraft.world.gen.feature.WorldGenGlowStone2;
-import net.minecraft.world.gen.feature.WorldGenHellLava;
-import net.minecraft.world.gen.feature.WorldGenMinable;
-import net.minecraft.world.gen.feature.WorldGenerator;
+import net.minecraft.world.gen.feature.*;
 import net.minecraft.world.gen.structure.MapGenNetherBridge;
 
+import javax.annotation.Nullable;
+import java.util.List;
+import java.util.Random;
+
 public class ChunkGeneratorHell implements IChunkGenerator
 {
     protected static final IBlockState AIR = Blocks.AIR.getDefaultState();
@@ -188,8 +183,10 @@
 
                 for (int j1 = 127; j1 >= 0; --j1)
                 {
-                    if (j1 < 127 - this.rand.nextInt(5) && j1 > this.rand.nextInt(5))
-                    {
+                    // Paper start - Configurable flat bedrock worldgen
+                    if (j1 < 127 - (world.paperConfig.generateFlatBedrock ? 0 : this.rand.nextInt(5)) &&
+                            j1 > (world.paperConfig.generateFlatBedrock ? 0 : this.rand.nextInt(5))) {
+                        // Paper end
                         IBlockState iblockstate2 = primer.getBlockState(k, j1, j);
 
                         if (iblockstate2.getBlock() != null && iblockstate2.getMaterial() != Material.AIR)
@@ -491,6 +488,6 @@
 
     public void recreateStructures(Chunk chunkIn, int x, int z)
     {
-        this.genNetherBridge.generate(this.world, x, z, (ChunkPrimer)null);
+        if (this.world.paperConfig.generateFortress) this.genNetherBridge.generate(this.world, x, z, (ChunkPrimer)null);
     }
 }
