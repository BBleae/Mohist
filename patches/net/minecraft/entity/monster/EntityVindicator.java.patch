--- ../src-base/minecraft/net/minecraft/entity/monster/EntityVindicator.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityVindicator.java
@@ -1,19 +1,8 @@
 package net.minecraft.entity.monster;
 
 import com.google.common.base.Predicate;
-import javax.annotation.Nullable;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityLiving;
-import net.minecraft.entity.EntityLivingBase;
-import net.minecraft.entity.EnumCreatureAttribute;
-import net.minecraft.entity.IEntityLivingData;
-import net.minecraft.entity.SharedMonsterAttributes;
-import net.minecraft.entity.ai.EntityAIAttackMelee;
-import net.minecraft.entity.ai.EntityAIHurtByTarget;
-import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
-import net.minecraft.entity.ai.EntityAISwimming;
-import net.minecraft.entity.ai.EntityAIWander;
-import net.minecraft.entity.ai.EntityAIWatchClosest;
+import net.minecraft.entity.*;
+import net.minecraft.entity.ai.*;
 import net.minecraft.entity.passive.EntityVillager;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Items;
@@ -31,6 +20,8 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+
 public class EntityVindicator extends AbstractIllager
 {
     private boolean johnny;
@@ -65,7 +56,7 @@
         this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, true));
         this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityVillager.class, true));
         this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityIronGolem.class, true));
-        this.targetTasks.addTask(4, new EntityVindicator.AIJohnnyAttack(this));
+        this.targetTasks.addTask(4, new AIJohnnyAttack(this));
     }
 
     protected void applyEntityAttributes()
@@ -111,7 +102,7 @@
     @SideOnly(Side.CLIENT)
     public AbstractIllager.IllagerArmPose getArmPose()
     {
-        return this.isAggressive() ? AbstractIllager.IllagerArmPose.ATTACKING : AbstractIllager.IllagerArmPose.CROSSED;
+        return this.isAggressive() ? IllagerArmPose.ATTACKING : IllagerArmPose.CROSSED;
     }
 
     public void readEntityFromNBT(NBTTagCompound compound)
