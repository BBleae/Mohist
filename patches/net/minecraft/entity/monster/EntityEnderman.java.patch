--- ../src-base/minecraft/net/minecraft/entity/monster/EntityEnderman.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityEnderman.java
@@ -4,10 +4,6 @@
 import com.google.common.base.Optional;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Sets;
-import java.util.Random;
-import java.util.Set;
-import java.util.UUID;
-import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -15,14 +11,7 @@
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.SharedMonsterAttributes;
-import net.minecraft.entity.ai.EntityAIAttackMelee;
-import net.minecraft.entity.ai.EntityAIBase;
-import net.minecraft.entity.ai.EntityAIHurtByTarget;
-import net.minecraft.entity.ai.EntityAILookIdle;
-import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
-import net.minecraft.entity.ai.EntityAISwimming;
-import net.minecraft.entity.ai.EntityAIWanderAvoidWater;
-import net.minecraft.entity.ai.EntityAIWatchClosest;
+import net.minecraft.entity.ai.*;
 import net.minecraft.entity.ai.attributes.AttributeModifier;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.entity.player.EntityPlayer;
@@ -35,11 +24,7 @@
 import net.minecraft.network.datasync.DataSerializers;
 import net.minecraft.network.datasync.EntityDataManager;
 import net.minecraft.pathfinding.PathNodeType;
-import net.minecraft.util.DamageSource;
-import net.minecraft.util.EntityDamageSourceIndirect;
-import net.minecraft.util.EnumParticleTypes;
-import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.SoundEvent;
+import net.minecraft.util.*;
 import net.minecraft.util.datafix.DataFixer;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
@@ -47,7 +32,13 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
 import net.minecraft.world.storage.loot.LootTableList;
+import org.bukkit.event.entity.EntityTargetEvent;
 
+import javax.annotation.Nullable;
+import java.util.Random;
+import java.util.Set;
+import java.util.UUID;
+
 public class EntityEnderman extends EntityMob
 {
     private static final UUID ATTACKING_SPEED_BOOST_ID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
@@ -73,9 +64,9 @@
         this.tasks.addTask(7, new EntityAIWanderAvoidWater(this, 1.0D, 0.0F));
         this.tasks.addTask(8, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
         this.tasks.addTask(8, new EntityAILookIdle(this));
-        this.tasks.addTask(10, new EntityEnderman.AIPlaceBlock(this));
-        this.tasks.addTask(11, new EntityEnderman.AITakeBlock(this));
-        this.targetTasks.addTask(1, new EntityEnderman.AIFindPlayer(this));
+        this.tasks.addTask(10, new AIPlaceBlock(this));
+        this.tasks.addTask(11, new AITakeBlock(this));
+        this.targetTasks.addTask(1, new AIFindPlayer(this));
         this.targetTasks.addTask(2, new EntityAIHurtByTarget(this, false, new Class[0]));
         this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityEndermite.class, 10, true, false, new Predicate<EntityEndermite>()
         {
@@ -97,10 +88,21 @@
 
     public void setAttackTarget(@Nullable EntityLivingBase entitylivingbaseIn)
     {
-        super.setAttackTarget(entitylivingbaseIn);
+        // CraftBukkit start - fire event
+        setGoalTarget(entitylivingbaseIn, EntityTargetEvent.TargetReason.UNKNOWN, true);
+    }
+
+    @Override
+    public boolean setGoalTarget(@Nullable EntityLivingBase entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        if (!super.setGoalTarget(entityliving, reason, fireEvent)) {
+            return false;
+        }
+        entityliving = getAttackTarget();
+        // CraftBukkit end
+        // super.setAttackTarget(entitylivingbaseIn);
         IAttributeInstance iattributeinstance = this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
 
-        if (entitylivingbaseIn == null)
+        if (entityliving == null)
         {
             this.targetChangeTime = 0;
             this.dataManager.set(SCREAMING, Boolean.valueOf(false));
@@ -116,6 +118,7 @@
                 iattributeinstance.applyModifier(ATTACKING_SPEED_BOOST);
             }
         }
+        return true;
     }
 
     protected void entityInit()
@@ -524,8 +527,11 @@
 
                 if (iblockstate2 != null && this.canPlaceBlock(world, blockpos, iblockstate2.getBlock(), iblockstate, iblockstate1))
                 {
-                    world.setBlockState(blockpos, iblockstate2, 3);
-                    this.enderman.setHeldBlockState((IBlockState)null);
+                    // CraftBukkit start - Place event
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, this.enderman.getHeldBlockState().getBlock(), this.enderman.getHeldBlockState().getBlock().getMetaFromState(this.enderman.getHeldBlockState())).isCancelled()) {
+                        world.setBlockState(blockpos, iblockstate2, 3);
+                        this.enderman.setHeldBlockState((IBlockState) null);
+                    }
                 }
             }
 
@@ -590,8 +596,14 @@
 
                 if (EntityEnderman.CARRIABLE_BLOCKS.contains(block) && flag)
                 {
-                    this.enderman.setHeldBlockState(iblockstate);
-                    world.setBlockToAir(blockpos);
+                    // this.enderman.setHeldBlockState(iblockstate);
+                    // world.setBlockToAir(blockpos);
+                    // CraftBukkit start - Pickup event
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, this.enderman.world.getWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ()), org.bukkit.Material.AIR).isCancelled()) {
+                        this.enderman.setHeldBlockState(iblockstate);
+                        world.setBlockToAir(blockpos);
+                    }
+                    // CraftBukkit end
                 }
             }
         }
