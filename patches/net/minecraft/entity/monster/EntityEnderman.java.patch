--- ../src-base/minecraft/net/minecraft/entity/monster/EntityEnderman.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityEnderman.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity.monster;
 
+import com.destroystokyo.paper.event.entity.EndermanEscapeEvent;
 import com.google.common.base.Function;
 import com.google.common.base.Optional;
 import com.google.common.base.Predicate;
@@ -47,6 +48,7 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
 import net.minecraft.world.storage.loot.LootTableList;
+import org.bukkit.event.entity.EntityTargetEvent;
 
 public class EntityEnderman extends EntityMob
 {
@@ -86,6 +88,12 @@
         }));
     }
 
+    // Paper start
+    private boolean tryEscape(EndermanEscapeEvent.Reason reason) {
+        return new EndermanEscapeEvent((org.bukkit.craftbukkit.entity.CraftEnderman) this.getBukkitEntity(), reason).callEvent();
+    }
+    // Paper end
+
     protected void applyEntityAttributes()
     {
         super.applyEntityAttributes();
@@ -97,10 +105,21 @@
 
     public void setAttackTarget(@Nullable EntityLivingBase entitylivingbaseIn)
     {
-        super.setAttackTarget(entitylivingbaseIn);
+        // CraftBukkit start - fire event
+        setAttackTarget(entitylivingbaseIn, EntityTargetEvent.TargetReason.UNKNOWN, true);
+    }
+
+    @Override
+    public boolean setAttackTarget(@Nullable EntityLivingBase entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        if (!super.setAttackTarget(entityliving, reason, fireEvent)) {
+            return false;
+        }
+        entityliving = getAttackTarget();
+        // CraftBukkit end
+        // super.setAttackTarget(entitylivingbaseIn);
         IAttributeInstance iattributeinstance = this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
 
-        if (entitylivingbaseIn == null)
+        if (entityliving == null)
         {
             this.targetChangeTime = 0;
             this.dataManager.set(SCREAMING, Boolean.valueOf(false));
@@ -116,6 +135,7 @@
                 iattributeinstance.applyModifier(ATTACKING_SPEED_BOOST);
             }
         }
+        return true;
     }
 
     protected void entityInit()
@@ -236,7 +256,7 @@
         {
             float f = this.getBrightness();
 
-            if (f > 0.5F && this.world.canSeeSky(new BlockPos(this)) && this.rand.nextFloat() * 30.0F < (f - 0.4F) * 2.0F)
+            if (f > 0.5F && this.world.canSeeSky(new BlockPos(this)) && this.rand.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && tryEscape(EndermanEscapeEvent.Reason.RUNAWAY))
             {
                 this.setAttackTarget((EntityLivingBase)null);
                 this.teleportRandomly();
@@ -246,7 +266,7 @@
         super.updateAITasks();
     }
 
-    protected boolean teleportRandomly()
+    public boolean teleportRandomly()
     {
         double d0 = this.posX + (this.rand.nextDouble() - 0.5D) * 64.0D;
         double d1 = this.posY + (double)(this.rand.nextInt(64) - 32);
@@ -331,7 +351,7 @@
         {
             return false;
         }
-        else if (source instanceof EntityDamageSourceIndirect)
+        else if (source instanceof EntityDamageSourceIndirect && tryEscape(EndermanEscapeEvent.Reason.INDIRECT))
         {
             for (int i = 0; i < 64; ++i)
             {
@@ -347,7 +367,7 @@
         {
             boolean flag = super.attackEntityFrom(source, amount);
 
-            if (source.isUnblockable() && this.rand.nextInt(10) != 0)
+            if (source.isUnblockable() && this.rand.nextInt(10) != 0 && tryEscape(source == DamageSource.DROWN ? EndermanEscapeEvent.Reason.DROWN : EndermanEscapeEvent.Reason.CRITICAL_HIT))
             {
                 this.teleportRandomly();
             }
@@ -395,6 +415,7 @@
     static class AIFindPlayer extends EntityAINearestAttackableTarget<EntityPlayer>
         {
             private final EntityEnderman enderman;
+            public EntityEnderman getEnderman() { return enderman; } // Paper - OBFHELPER
             private EntityPlayer player;
             private int aggroTime;
             private int teleportTime;
@@ -467,7 +488,7 @@
                     {
                         if (this.enderman.shouldAttackPlayer((EntityPlayer)this.targetEntity))
                         {
-                            if (((EntityPlayer)this.targetEntity).getDistanceSq(this.enderman) < 16.0D)
+                            if (((EntityPlayer)this.targetEntity).getDistanceSq(this.enderman) < 16.0D && this.getEnderman().tryEscape(EndermanEscapeEvent.Reason.STARE))
                             {
                                 this.enderman.teleportRandomly();
                             }
@@ -524,8 +545,11 @@
 
                 if (iblockstate2 != null && this.canPlaceBlock(world, blockpos, iblockstate2.getBlock(), iblockstate, iblockstate1))
                 {
-                    world.setBlockState(blockpos, iblockstate2, 3);
-                    this.enderman.setHeldBlockState((IBlockState)null);
+                    // CraftBukkit start - Place event
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, this.enderman.getHeldBlockState().getBlock(), this.enderman.getHeldBlockState().getBlock().getMetaFromState(this.enderman.getHeldBlockState())).isCancelled()) {
+                        world.setBlockState(blockpos, iblockstate2, 3);
+                        this.enderman.setHeldBlockState((IBlockState) null);
+                    }
                 }
             }
 
@@ -590,8 +614,14 @@
 
                 if (EntityEnderman.CARRIABLE_BLOCKS.contains(block) && flag)
                 {
-                    this.enderman.setHeldBlockState(iblockstate);
-                    world.setBlockToAir(blockpos);
+                    // this.enderman.setHeldBlockState(iblockstate);
+                    // world.setBlockToAir(blockpos);
+                    // CraftBukkit start - Pickup event
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, this.enderman.world.getWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ()), org.bukkit.Material.AIR).isCancelled()) {
+                        this.enderman.setHeldBlockState(iblockstate);
+                        world.setBlockToAir(blockpos);
+                    }
+                    // CraftBukkit end
                 }
             }
         }
