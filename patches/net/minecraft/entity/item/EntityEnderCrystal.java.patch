--- ../src-base/minecraft/net/minecraft/entity/item/EntityEnderCrystal.java
+++ ../src-work/minecraft/net/minecraft/entity/item/EntityEnderCrystal.java
@@ -1,7 +1,6 @@
 package net.minecraft.entity.item;
 
 import com.google.common.base.Optional;
-import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.boss.EntityDragon;
 import net.minecraft.init.Blocks;
@@ -17,7 +16,11 @@
 import net.minecraft.world.end.DragonFightManager;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
 
+import javax.annotation.Nullable;
+
 public class EntityEnderCrystal extends Entity
 {
     private static final DataParameter<Optional<BlockPos>> BEAM_TARGET = EntityDataManager.<Optional<BlockPos>>createKey(EntityEnderCrystal.class, DataSerializers.OPTIONAL_BLOCK_POS);
@@ -62,7 +65,10 @@
 
             if (this.world.provider instanceof WorldProviderEnd && this.world.getBlockState(blockpos).getBlock() != Blocks.FIRE)
             {
-                this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+//                this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                if (!CraftEventFactory.callBlockIgniteEvent(this.world, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this).isCancelled()) {
+                    this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                }
             }
         }
     }
@@ -109,13 +115,23 @@
         {
             if (!this.isDead && !this.world.isRemote)
             {
+                if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount)) {
+                    return false;
+                }
                 this.setDead();
 
                 if (!this.world.isRemote)
                 {
                     if (!source.isExplosion())
                     {
-                        this.world.createExplosion((Entity)null, this.posX, this.posY, this.posZ, 6.0F, true);
+//                        this.world.createExplosion((Entity)null, this.posX, this.posY, this.posZ, 6.0F, true);
+                        ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 6.0F, true);
+                        this.world.getServer().getPluginManager().callEvent(event);
+                        if (event.isCancelled()) {
+                            this.isDead = false;
+                            return false;
+                        }
+                        this.world.createExplosion(this, this.posX, this.posY, this.posZ, event.getRadius(), event.getFire());
                     }
 
                     this.onCrystalDestroyed(source);
