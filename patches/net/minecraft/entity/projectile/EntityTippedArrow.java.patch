--- ../src-base/minecraft/net/minecraft/entity/projectile/EntityTippedArrow.java
+++ ../src-work/minecraft/net/minecraft/entity/projectile/EntityTippedArrow.java
@@ -1,8 +1,6 @@
 package net.minecraft.entity.projectile;
 
 import com.google.common.collect.Sets;
-import java.util.Collection;
-import java.util.Set;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.init.Items;
 import net.minecraft.init.PotionTypes;
@@ -22,11 +20,14 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Collection;
+import java.util.Set;
+
 public class EntityTippedArrow extends EntityArrow
 {
     private static final DataParameter<Integer> COLOR = EntityDataManager.<Integer>createKey(EntityTippedArrow.class, DataSerializers.VARINT);
     private PotionType potion = PotionTypes.EMPTY;
-    private final Set<PotionEffect> customPotionEffects = Sets.<PotionEffect>newHashSet();
+    public final Set<PotionEffect> customPotionEffects = Sets.<PotionEffect>newHashSet();
     private boolean fixedColor;
 
     public EntityTippedArrow(World worldIn)
@@ -146,12 +147,30 @@
         }
     }
 
+    // CraftBukkit start accessor methods
+    public void refreshEffects() {
+        this.getDataManager().set(EntityTippedArrow.COLOR, PotionUtils.getPotionColorFromEffectList(PotionUtils.mergeEffects(this.potion, this.customPotionEffects)));
+    }
+
+    public String getType() {
+        return PotionType.REGISTRY.getNameForObject(this.potion).toString();
+    }
+
+    public void setType(String string) {
+        this.potion = PotionType.REGISTRY.getObject(new ResourceLocation(string));
+        this.dataManager.set(EntityTippedArrow.COLOR, PotionUtils.getPotionColorFromEffectList(PotionUtils.mergeEffects(this.potion, this.customPotionEffects)));
+    }
+
+    public boolean isTipped() {
+        return !(this.customPotionEffects.isEmpty() && this.potion == PotionTypes.EMPTY);
+    }
+
     public int getColor()
     {
         return ((Integer)this.dataManager.get(COLOR)).intValue();
     }
 
-    private void setFixedColor(int p_191507_1_)
+    public void setFixedColor(int p_191507_1_)
     {
         this.fixedColor = true;
         this.dataManager.set(COLOR, Integer.valueOf(p_191507_1_));
