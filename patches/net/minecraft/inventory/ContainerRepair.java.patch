--- ../src-base/minecraft/net/minecraft/inventory/ContainerRepair.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerRepair.java
@@ -1,6 +1,5 @@
 package net.minecraft.inventory;
 
-import java.util.Map;
 import net.minecraft.block.BlockAnvil;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.Enchantment;
@@ -18,7 +17,10 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
+import java.util.Map;
+
 public class ContainerRepair extends Container
 {
     private static final Logger LOGGER = LogManager.getLogger();
@@ -28,9 +30,13 @@
     private final BlockPos selfPosition;
     public int maximumCost;
     public int materialCost;
-    private String repairedItemName;
+    public String repairedItemName;
     private final EntityPlayer player;
 
+    private int lastLevelCost;
+    private CraftInventoryView bukkitEntity;
+    private InventoryPlayer playerInventory;
+
     @SideOnly(Side.CLIENT)
     public ContainerRepair(InventoryPlayer playerInventory, World worldIn, EntityPlayer player)
     {
@@ -39,6 +45,7 @@
 
     public ContainerRepair(InventoryPlayer playerInventory, final World worldIn, final BlockPos blockPosIn, EntityPlayer player)
     {
+        this.playerInventory = playerInventory;
         this.outputSlot = new InventoryCraftResult();
         this.inputSlots = new InventoryBasic("Repair", true, 2)
         {
@@ -178,7 +185,8 @@
 
                     if (l2 <= 0)
                     {
-                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+//                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        if (getBukkitView() != null) org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY);
                         this.maximumCost = 0;
                         return;
                     }
@@ -299,7 +307,8 @@
 
                     if (flag3 && !flag2)
                     {
-                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+//                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        if (getBukkitView() != null) org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY);
                         this.maximumCost = 0;
                         return;
                     }
@@ -358,7 +367,8 @@
                 EnchantmentHelper.setEnchantments(map, itemstack1);
             }
 
-            this.outputSlot.setInventorySlotContents(0, itemstack1);
+//            this.outputSlot.setInventorySlotContents(0, itemstack1);
+            if (getBukkitView() != null) org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), itemstack1);
             this.detectAndSendChanges();
         }
     }
@@ -390,6 +400,7 @@
 
     public boolean canInteractWith(EntityPlayer playerIn)
     {
+        if (!this.checkReachable) return true;
         if (this.world.getBlockState(this.selfPosition).getBlock() != Blocks.ANVIL)
         {
             return false;
@@ -471,4 +482,27 @@
 
         this.updateRepairOutput();
     }
+
+    @Override
+    public void detectAndSendChanges() {
+        super.detectAndSendChanges();
+        for (int i = 0; i < this.listeners.size(); ++i) {
+            IContainerListener icrafting = this.listeners.get(i);
+            icrafting.sendWindowProperty(this, 0, this.maximumCost);
+        }
+
+        this.lastLevelCost = this.maximumCost;
+    }
+
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventory inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryAnvil(
+                new org.bukkit.Location(world.getWorld(), selfPosition.getX(), selfPosition.getY(), selfPosition.getZ()), this.inputSlots, this.outputSlot, this);
+        bukkitEntity = new CraftInventoryView(this.playerInventory.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
 }
